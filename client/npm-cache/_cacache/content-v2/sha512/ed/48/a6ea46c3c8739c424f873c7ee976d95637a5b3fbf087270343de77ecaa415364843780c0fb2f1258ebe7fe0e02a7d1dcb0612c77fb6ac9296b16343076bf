{
  "_id" : "axios",
  "_rev" : "705-66559a6e0980530951bde7d6797bd248",
  "name" : "axios",
  "description" : "Promise based HTTP client for the browser and node.js",
  "dist-tags" : {
    "next" : "0.20.0-0",
    "latest" : "0.20.0"
  },
  "versions" : {
    "0.4.2" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.4.2",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.4.2.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.4.2.tgz",
        "shasum" : "d31b5752d4885ba460ef0fd1107447b279e6f66b"
      },
      "dependencies" : {
        "es6-promise" : "^1.0.0"
      },
      "devDependencies" : {
        "grunt" : "^0.4.5",
        "grunt-banner" : "^0.2.3",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-contrib-watch" : "^0.6.1",
        "grunt-karma" : "^0.8.3",
        "grunt-ts" : "^1.12.1",
        "grunt-update-json" : "^0.1.3",
        "grunt-webpack" : "^1.0.8",
        "karma" : "^0.12.21",
        "karma-jasmine" : "^0.1.5",
        "karma-jasmine-ajax" : "^0.1.4",
        "karma-phantomjs-launcher" : "^0.1.4",
        "load-grunt-tasks" : "^0.6.0",
        "webpack" : "^1.4.0-beta9",
        "webpack-dev-server" : "^1.4.10"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js"
      },
      "_from" : "./",
      "_npmVersion" : "1.4.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.4.2",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      }
    },
    "0.5.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.5.1",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.5.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.5.1.tgz",
        "shasum" : "63d83686335dc59a57a413b715999691fd0ea43e"
      },
      "dependencies" : {
        "es6-promise" : "^2.0.1"
      },
      "devDependencies" : {
        "grunt" : "^0.4.5",
        "grunt-banner" : "^0.2.3",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-contrib-watch" : "^0.6.1",
        "grunt-karma" : "^0.8.3",
        "grunt-ts" : "^1.12.1",
        "grunt-update-json" : "^0.1.3",
        "grunt-webpack" : "^1.0.8",
        "karma" : "^0.12.31",
        "karma-jasmine" : "^0.3.5",
        "karma-jasmine-ajax" : "^0.1.11",
        "karma-phantomjs-launcher" : "^0.1.4",
        "load-grunt-tasks" : "^0.6.0",
        "webpack" : "^1.4.0-beta9",
        "webpack-dev-server" : "^1.4.10"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.1.6",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.5.1",
      "gitHead" : "bd5d9b7258dd27648caddeba8259a4ed020b6724",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_shasum" : "63d83686335dc59a57a413b715999691fd0ea43e",
      "_nodeVersion" : "0.10.33"
    },
    "0.6.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.6.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.6.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.6.0.tgz",
        "shasum" : "5f3b9bc5557f9d804547501f1a227eaa3216cad2"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.3",
        "es6-promise" : "^3.0.2",
        "grunt" : "^0.4.5",
        "grunt-banner" : "^0.5.0",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-contrib-watch" : "^0.6.1",
        "grunt-eslint" : "^17.1.0",
        "grunt-karma" : "^0.12.0",
        "grunt-ts" : "^5.0.0-beta.5",
        "grunt-update-json" : "^0.2.1",
        "grunt-webpack" : "^1.0.11",
        "jasmine-core" : "^2.3.4",
        "karma" : "^0.13.8",
        "karma-coverage" : "^0.5.0",
        "karma-jasmine" : "^0.3.6",
        "karma-jasmine-ajax" : "^0.1.12",
        "karma-phantomjs-launcher" : "^0.2.1",
        "karma-sourcemap-loader" : "^0.3.5",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.2.0",
        "minimist" : "^1.1.3",
        "webpack" : "^1.11.0",
        "webpack-dev-server" : "^1.10.1"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.13.4",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.6.0",
      "gitHead" : "cd0cd1805434dea0d250d195a466a1236b98e502",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_shasum" : "5f3b9bc5557f9d804547501f1a227eaa3216cad2",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "0.10.33"
    },
    "0.5.2" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.5.2",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.5.2.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.5.2.tgz",
        "shasum" : "eb6009d000d81067cf0568dbac847e105525013a"
      },
      "dependencies" : {
        "es6-promise" : "^2.0.1"
      },
      "devDependencies" : {
        "grunt" : "^0.4.5",
        "grunt-banner" : "^0.3.1",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-contrib-watch" : "^0.6.1",
        "grunt-karma" : "^0.10.1",
        "grunt-ts" : "^3.0.0",
        "grunt-update-json" : "^0.2.1",
        "grunt-webpack" : "^1.0.8",
        "karma" : "^0.12.31",
        "karma-jasmine" : "^0.3.5",
        "karma-jasmine-ajax" : "^0.1.12",
        "karma-phantomjs-launcher" : "^0.1.4",
        "load-grunt-tasks" : "^3.1.0",
        "webpack" : "^1.7.2",
        "webpack-dev-server" : "^1.7.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.7.0",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.5.2",
      "gitHead" : "2ce5aa77df30369960924ee70956f6ac0d37a1aa",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_shasum" : "eb6009d000d81067cf0568dbac847e105525013a",
      "_nodeVersion" : "0.10.33"
    },
    "0.7.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.7.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.7.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.7.0.tgz",
        "shasum" : "489c269044d5066dfa2c64c749cb131b176f4a7a"
      },
      "devDependencies" : {
        "coveralls" : "2.11.4",
        "es6-promise" : "3.0.2",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.5.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "0.6.0",
        "grunt-contrib-nodeunit" : "0.4.1",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "17.2.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.0.0-beta.5",
        "grunt-update-json" : "0.2.1",
        "grunt-webpack" : "1.0.11",
        "jasmine-core" : "2.3.4",
        "karma" : "0.13.10",
        "karma-coverage" : "0.5.2",
        "karma-jasmine" : "0.3.6",
        "karma-jasmine-ajax" : "0.1.13",
        "karma-phantomjs-launcher" : "0.2.1",
        "karma-sourcemap-loader" : "0.3.5",
        "karma-webpack" : "1.7.0",
        "load-grunt-tasks" : "3.3.0",
        "minimist" : "1.2.0",
        "phantomjs" : "1.9.18",
        "webpack" : "1.12.2",
        "webpack-dev-server" : "1.12.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.13.4",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.7.0",
      "gitHead" : "e8136b1f746d87d9ac620cb50c26722db555169a",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_shasum" : "489c269044d5066dfa2c64c749cb131b176f4a7a",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "0.10.33"
    },
    "0.2.2" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.2.2",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.2.2.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.2.2.tgz",
        "shasum" : "e69c16b591e43c248cbbdd089e0babb2ba820cde"
      },
      "dependencies" : {
        "es6-promise" : "^1.0.0"
      },
      "devDependencies" : {
        "grunt" : "^0.4.5",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-watch" : "^0.6.1",
        "webpack" : "^1.3.3-beta2",
        "webpack-dev-server" : "^1.4.10",
        "grunt-webpack" : "^1.0.8",
        "load-grunt-tasks" : "^0.6.0",
        "karma" : "^0.12.21",
        "karma-jasmine" : "^0.1.5",
        "grunt-karma" : "^0.8.3",
        "karma-phantomjs-launcher" : "^0.1.4",
        "karma-jasmine-ajax" : "^0.1.4",
        "grunt-update-json" : "^0.1.3",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-banner" : "^0.2.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js"
      },
      "_from" : "./",
      "_npmVersion" : "1.4.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.2.2",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      }
    },
    "0.3.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.3.1",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.3.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.3.1.tgz",
        "shasum" : "7380abe912433fb47ea582bed582300ffe479564"
      },
      "dependencies" : {
        "es6-promise" : "^1.0.0"
      },
      "devDependencies" : {
        "grunt" : "^0.4.5",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-watch" : "^0.6.1",
        "webpack" : "^1.4.0-beta9",
        "webpack-dev-server" : "^1.4.10",
        "grunt-webpack" : "^1.0.8",
        "load-grunt-tasks" : "^0.6.0",
        "karma" : "^0.12.21",
        "karma-jasmine" : "^0.1.5",
        "grunt-karma" : "^0.8.3",
        "karma-phantomjs-launcher" : "^0.1.4",
        "karma-jasmine-ajax" : "^0.1.4",
        "grunt-update-json" : "^0.1.3",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-banner" : "^0.2.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js"
      },
      "_from" : "./",
      "_npmVersion" : "1.4.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.3.1",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      }
    },
    "0.4.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.4.0",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.4.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.4.0.tgz",
        "shasum" : "b5918c5c71aaa809f6183d68822c44fb39b7b338"
      },
      "dependencies" : {
        "es6-promise" : "^1.0.0"
      },
      "devDependencies" : {
        "grunt" : "^0.4.5",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-watch" : "^0.6.1",
        "webpack" : "^1.4.0-beta9",
        "webpack-dev-server" : "^1.4.10",
        "grunt-webpack" : "^1.0.8",
        "load-grunt-tasks" : "^0.6.0",
        "karma" : "^0.12.21",
        "karma-jasmine" : "^0.1.5",
        "grunt-karma" : "^0.8.3",
        "karma-phantomjs-launcher" : "^0.1.4",
        "karma-jasmine-ajax" : "^0.1.4",
        "grunt-update-json" : "^0.1.3",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-banner" : "^0.2.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js"
      },
      "_from" : "./",
      "_npmVersion" : "1.4.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.4.0",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      }
    },
    "0.20.0-0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.20.0-0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/axios/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.20.0-0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.20.0-0.tgz",
        "shasum" : "cbb49efab92d14be740a04c0f1d0c68031773f36"
      },
      "dependencies" : {
        "follow-redirects" : "^1.10.0"
      },
      "devDependencies" : {
        "bundlesize" : "^0.17.0",
        "coveralls" : "^3.0.0",
        "es6-promise" : "^4.2.4",
        "grunt" : "^1.0.2",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.1.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^20.1.0",
        "grunt-karma" : "^2.0.0",
        "grunt-mocha-test" : "^0.13.3",
        "grunt-ts" : "^6.0.0-beta.19",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.2.0",
        "karma-coverage" : "^1.1.1",
        "karma-firefox-launcher" : "^1.1.0",
        "karma-jasmine" : "^1.1.1",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.2.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "mocha" : "^5.2.0",
        "sinon" : "^4.5.0",
        "typescript" : "^2.8.1",
        "url-search-params" : "^0.10.0",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test && bundlesize",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
        "fix" : "eslint --fix lib/**/*.js"
      },
      "_npmVersion" : "6.13.4",
      "_npmUser" : {
        "name" : "emilyemorehouse",
        "email" : "emilyemorehouse@gmail.com"
      },
      "_id" : "axios@0.20.0-0",
      "gitHead" : "ffea03453f77a8176c51554d5f6c3c6829294649",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "unpkg" : "dist/axios.min.js",
      "bundlesize" : [ {
        "path" : "./dist/axios.min.js",
        "threshold" : "5kB"
      } ],
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/axios_0.20.0-0_1594829250349_0.17241303883107806"
      },
      "readme" : "# axios\n\n[![npm version](https://img.shields.io/npm/v/axios.svg?style=flat-square)](https://www.npmjs.org/package/axios)\n[![CDNJS](https://img.shields.io/cdnjs/v/axios.svg?style=flat-square)](https://cdnjs.com/libraries/axios)\n[![build status](https://img.shields.io/travis/axios/axios/master.svg?style=flat-square)](https://travis-ci.org/axios/axios)\n[![code coverage](https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square)](https://coveralls.io/r/mzabriskie/axios)\n[![install size](https://packagephobia.now.sh/badge?p=axios)](https://packagephobia.now.sh/result?p=axios)\n[![npm downloads](https://img.shields.io/npm/dm/axios.svg?style=flat-square)](http://npm-stat.com/charts.html?package=axios)\n[![gitter chat](https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square)](https://gitter.im/mzabriskie/axios)\n[![code helpers](https://www.codetriage.com/axios/axios/badges/users.svg)](https://www.codetriage.com/axios/axios)\n\nPromise based HTTP client for the browser and node.js\n## Table of Contents\n\n  - [Features](#features)\n  - [Browser Support](#browser-support)\n  - [Installing](#installing)\n  - [Example](#example)\n  - [Axios API](#axios-api)\n  - [Request method aliases](#request-method-aliases)\n  - [Concurrency (Deprecated)](#concurrency-deprecated)\n  - [Creating an instance](#creating-an-instance)\n  - [Instance methods](#instance-methods)\n  - [Request Config](#request-config)\n  - [Response Schema](#response-schema)\n  - [Config Defaults](#config-defaults)\n    - [Global axios defaults](#global-axios-defaults)\n    - [Custom instance defaults](#custom-instance-defaults)\n    - [Config order of precedence](#config-order-of-precedence)\n  - [Interceptors](#interceptors)\n  - [Handling Errors](#handling-errors)\n  - [Cancellation](#cancellation)\n  - [Using application/x-www-form-urlencoded format](#using-applicationx-www-form-urlencoded-format)\n    - [Browser](#browser)\n    - [Node.js](#nodejs)\n      - [Query string](#query-string)\n      - [Form data](#form-data)\n  - [Semver](#semver)\n  - [Promises](#promises)\n  - [TypeScript](#typescript)\n  - [Resources](#resources)\n  - [Credits](#credits)\n  - [License](#license)\n\n## Features\n\n- Make [XMLHttpRequests](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) from the browser\n- Make [http](http://nodejs.org/api/http.html) requests from node.js\n- Supports the [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) API\n- Intercept request and response\n- Transform request and response data\n- Cancel requests\n- Automatic transforms for JSON data\n- Client side support for protecting against [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png) | ![Safari](https://raw.github.com/alrra/browser-logos/master/src/safari/safari_48x48.png) | ![Opera](https://raw.github.com/alrra/browser-logos/master/src/opera/opera_48x48.png) | ![Edge](https://raw.github.com/alrra/browser-logos/master/src/edge/edge_48x48.png) | ![IE](https://raw.github.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png) |\n--- | --- | --- | --- | --- | --- |\nLatest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | 11 ✔ |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing yarn:\n\n```bash\n$ yarn add axios\n```\n\nUsing jsDelivr CDN:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>\n```\n\nUsing unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n```\n\n## Example\n\n### note: CommonJS usage\nIn order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()` use the following approach:\n\n```js\nconst axios = require('axios').default;\n\n// axios.<method> will now provide autocomplete and parameter typings\n```\n\nPerforming a `GET` request\n\n```js\nconst axios = require('axios');\n\n// Make a request for a user with a given ID\naxios.get('/user?ID=12345')\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n  .then(function () {\n    // always executed\n  });\n\n// Optionally the request above could also be done as\naxios.get('/user', {\n    params: {\n      ID: 12345\n    }\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  })\n  .then(function () {\n    // always executed\n  });  \n\n// Want to use async/await? Add the `async` keyword to your outer function/method.\nasync function getUser() {\n  try {\n    const response = await axios.get('/user?ID=12345');\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n```\n\n> **NOTE:** `async/await` is part of ECMAScript 2017 and is not supported in Internet\n> Explorer and older browsers, so use with caution.\n\nPerforming a `POST` request\n\n```js\naxios.post('/user', {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n```\n\nPerforming multiple concurrent requests\n\n```js\nfunction getUserAccount() {\n  return axios.get('/user/12345');\n}\n\nfunction getUserPermissions() {\n  return axios.get('/user/12345/permissions');\n}\n\nPromise.all([getUserAccount(), getUserPermissions()])\n  .then(function (results) {\n    const acct = results[0];\n    const perm = results[1];\n  });\n```\n\n## axios API\n\nRequests can be made by passing the relevant config to `axios`.\n\n##### axios(config)\n\n```js\n// Send a POST request\naxios({\n  method: 'post',\n  url: '/user/12345',\n  data: {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  }\n});\n```\n\n```js\n// GET request for remote image in node.js\naxios({\n  method: 'get',\n  url: 'http://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Send a GET request (default method)\naxios('/user/12345');\n```\n\n### Request method aliases\n\nFor convenience aliases have been provided for all supported request methods.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### NOTE\nWhen using the alias methods `url`, `method`, and `data` properties don't need to be specified in config.\n\n### Concurrency (Deprecated)\nPlease use `Promise.all` to replace the below functions.\n\nHelper functions for dealing with concurrent requests.\n\naxios.all(iterable)\naxios.spread(callback)\n\n### Creating an instance\n\nYou can create a new instance of axios with a custom config.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Instance methods\n\nThe available instance methods are listed below. The specified config will be merged with the instance config.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Request Config\n\nThese are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.\n\n```js\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n\n  // `baseURL` will be prepended to `url` unless `url` is absolute.\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  // to methods of that instance.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `transformRequest` allows changes to the request data before it is sent to the server\n  // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  // FormData or Stream\n  // You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `transformResponse` allows changes to the response data to be made before\n  // it is passed to then/catch\n  transformResponse: [function (data) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `headers` are custom headers to be sent\n  headers: {'X-Requested-With': 'XMLHttpRequest'},\n\n  // `params` are the URL parameters to be sent with the request\n  // Must be a plain object or a URLSearchParams object\n  params: {\n    ID: 12345\n  },\n\n  // `paramsSerializer` is an optional function in charge of serializing `params`\n  // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)\n  paramsSerializer: function (params) {\n    return Qs.stringify(params, {arrayFormat: 'brackets'})\n  },\n\n  // `data` is the data to be sent as the request body\n  // Only applicable for request methods 'PUT', 'POST', 'DELETE , and 'PATCH'\n  // When no `transformRequest` is set, must be of one of the following types:\n  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n  // - Browser only: FormData, File, Blob\n  // - Node only: Stream, Buffer\n  data: {\n    firstName: 'Fred'\n  },\n  \n  // syntax alternative to send data into the body\n  // method post\n  // only the value is sent, not the key\n  data: 'Country=Brasil&City=Belo Horizonte',\n\n  // `timeout` specifies the number of milliseconds before the request times out.\n  // If the request takes longer than `timeout`, the request will be aborted.\n  timeout: 1000, // default is `0` (no timeout)\n\n  // `withCredentials` indicates whether or not cross-site Access-Control requests\n  // should be made using credentials\n  withCredentials: false, // default\n\n  // `adapter` allows custom handling of requests which makes testing easier.\n  // Return a promise and supply a valid response (see lib/adapters/README.md).\n  adapter: function (config) {\n    /* ... */\n  },\n\n  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.\n  // This will set an `Authorization` header, overwriting any existing\n  // `Authorization` custom headers you have set using `headers`.\n  // Please note that only HTTP Basic auth is configurable through this parameter.\n  // For Bearer tokens and such, use `Authorization` custom headers instead.\n  auth: {\n    username: 'janedoe',\n    password: 's00pers3cret'\n  },\n\n  // `responseType` indicates the type of data that the server will respond with\n  // options are: 'arraybuffer', 'document', 'json', 'text', 'stream'\n  //   browser only: 'blob'\n  responseType: 'json', // default\n\n  // `responseEncoding` indicates encoding to use for decoding responses (Node.js only)\n  // Note: Ignored for `responseType` of 'stream' or client-side requests\n  responseEncoding: 'utf8', // default\n\n  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token\n  xsrfCookieName: 'XSRF-TOKEN', // default\n\n  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value\n  xsrfHeaderName: 'X-XSRF-TOKEN', // default\n\n  // `onUploadProgress` allows handling of progress events for uploads\n  // browser only\n  onUploadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `onDownloadProgress` allows handling of progress events for downloads\n  // browser only\n  onDownloadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `maxContentLength` defines the max size of the http response content in bytes allowed in node.js\n  maxContentLength: 2000,\n\n  // `maxBodyLength` (Node only option) defines the max size of the http request content in bytes allowed\n  maxBodyLength: 2000,\n\n  // `validateStatus` defines whether to resolve or reject the promise for a given\n  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\n  // or `undefined`), the promise will be resolved; otherwise, the promise will be\n  // rejected.\n  validateStatus: function (status) {\n    return status >= 200 && status < 300; // default\n  },\n\n  // `maxRedirects` defines the maximum number of redirects to follow in node.js.\n  // If set to 0, no redirects will be followed.\n  maxRedirects: 5, // default\n\n  // `socketPath` defines a UNIX Socket to be used in node.js.\n  // e.g. '/var/run/docker.sock' to send requests to the docker daemon.\n  // Only either `socketPath` or `proxy` can be specified.\n  // If both are specified, `socketPath` is used.\n  socketPath: null, // default\n\n  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http\n  // and https requests, respectively, in node.js. This allows options to be added like\n  // `keepAlive` that are not enabled by default.\n  httpAgent: new http.Agent({ keepAlive: true }),\n  httpsAgent: new https.Agent({ keepAlive: true }),\n\n  // `proxy` defines the hostname and port of the proxy server.\n  // You can also define your proxy using the conventional `http_proxy` and\n  // `https_proxy` environment variables. If you are using environment variables\n  // for your proxy configuration, you can also define a `no_proxy` environment\n  // variable as a comma-separated list of domains that should not be proxied.\n  // Use `false` to disable proxies, ignoring environment variables.\n  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and\n  // supplies credentials.\n  // This will set an `Proxy-Authorization` header, overwriting any existing\n  // `Proxy-Authorization` custom headers you have set using `headers`.\n  proxy: {\n    host: '127.0.0.1',\n    port: 9000,\n    auth: {\n      username: 'mikeymike',\n      password: 'rapunz3l'\n    }\n  },\n\n  // `cancelToken` specifies a cancel token that can be used to cancel the request\n  // (see Cancellation section below for details)\n  cancelToken: new CancelToken(function (cancel) {\n  }),\n\n  // `decompress` indicates whether or not the response body should be decompressed \n  // automatically. If set to `true` will also remove the 'content-encoding' header \n  // from the responses objects of all decompressed responses\n  // - Node only (XHR cannot turn off decompression)\n  decompress: true // default\n\n}\n```\n\n## Response Schema\n\nThe response for a request contains the following information.\n\n```js\n{\n  // `data` is the response that was provided by the server\n  data: {},\n\n  // `status` is the HTTP status code from the server response\n  status: 200,\n\n  // `statusText` is the HTTP status message from the server response\n  statusText: 'OK',\n\n  // `headers` the HTTP headers that the server responded with\n  // All header names are lower cased and can be accessed using the bracket notation.\n  // Example: `response.headers['content-type']`\n  headers: {},\n\n  // `config` is the config that was provided to `axios` for the request\n  config: {},\n\n  // `request` is the request that generated this response\n  // It is the last ClientRequest instance in node.js (in redirects)\n  // and an XMLHttpRequest instance in the browser\n  request: {}\n}\n```\n\nWhen using `then`, you will receive the response as follows:\n\n```js\naxios.get('/user/12345')\n  .then(function (response) {\n    console.log(response.data);\n    console.log(response.status);\n    console.log(response.statusText);\n    console.log(response.headers);\n    console.log(response.config);\n  });\n```\n\nWhen using `catch`, or passing a [rejection callback](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then) as second parameter of `then`, the response will be available through the `error` object as explained in the [Handling Errors](#handling-errors) section.\n\n## Config Defaults\n\nYou can specify config defaults that will be applied to every request.\n\n### Global axios defaults\n\n```js\naxios.defaults.baseURL = 'https://api.example.com';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n```\n\n### Custom instance defaults\n\n```js\n// Set config defaults when creating the instance\nconst instance = axios.create({\n  baseURL: 'https://api.example.com'\n});\n\n// Alter defaults after instance has been created\ninstance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n```\n\n### Config order of precedence\n\nConfig will be merged with an order of precedence. The order is library defaults found in [lib/defaults.js](https://github.com/axios/axios/blob/master/lib/defaults.js#L28), then `defaults` property of the instance, and finally `config` argument for the request. The latter will take precedence over the former. Here's an example.\n\n```js\n// Create an instance using the config defaults provided by the library\n// At this point the timeout config value is `0` as is the default for the library\nconst instance = axios.create();\n\n// Override timeout default for the library\n// Now all requests using this instance will wait 2.5 seconds before timing out\ninstance.defaults.timeout = 2500;\n\n// Override timeout for this request as it's known to take a long time\ninstance.get('/longRequest', {\n  timeout: 5000\n});\n```\n\n## Interceptors\n\nYou can intercept requests or responses before they are handled by `then` or `catch`.\n\n```js\n// Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  }, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  });\n```\n\nIf you need to remove an interceptor later you can.\n\n```js\nconst myInterceptor = axios.interceptors.request.use(function () {/*...*/});\naxios.interceptors.request.eject(myInterceptor);\n```\n\nYou can add interceptors to a custom instance of axios.\n\n```js\nconst instance = axios.create();\ninstance.interceptors.request.use(function () {/*...*/});\n```\n\n## Handling Errors\n\n```js\naxios.get('/user/12345')\n  .catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n```\n\nUsing the `validateStatus` config option, you can define HTTP code(s) that should throw an error.\n\n```js\naxios.get('/user/12345', {\n  validateStatus: function (status) {\n    return status < 500; // Resolve only if the status code is less than 500\n  }\n})\n```\n\nUsing `toJSON` you get an object with more information about the HTTP error.\n\n```js\naxios.get('/user/12345')\n  .catch(function (error) {\n    console.log(error.toJSON());\n  });\n```\n\n## Cancellation\n\nYou can cancel a request using a *cancel token*.\n\n> The axios cancel token API is based on the withdrawn [cancelable promises proposal](https://github.com/tc39/proposal-cancelable-promises).\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\naxios.get('/user/12345', {\n  cancelToken: source.token\n}).catch(function (thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('Request canceled', thrown.message);\n  } else {\n    // handle error\n  }\n});\n\naxios.post('/user/12345', {\n  name: 'new name'\n}, {\n  cancelToken: source.token\n})\n\n// cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user.');\n```\n\nYou can also create a cancel token by passing an executor function to the `CancelToken` constructor:\n\n```js\nconst CancelToken = axios.CancelToken;\nlet cancel;\n\naxios.get('/user/12345', {\n  cancelToken: new CancelToken(function executor(c) {\n    // An executor function receives a cancel function as a parameter\n    cancel = c;\n  })\n});\n\n// cancel the request\ncancel();\n```\n\n> Note: you can cancel several requests with the same cancel token.\n\n## Using application/x-www-form-urlencoded format\n\nBy default, axios serializes JavaScript objects to `JSON`. To send data in the `application/x-www-form-urlencoded` format instead, you can use one of the following options.\n\n### Browser\n\nIn a browser, you can use the [`URLSearchParams`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams) API as follows:\n\n```js\nconst params = new URLSearchParams();\nparams.append('param1', 'value1');\nparams.append('param2', 'value2');\naxios.post('/foo', params);\n```\n\n> Note that `URLSearchParams` is not supported by all browsers (see [caniuse.com](http://www.caniuse.com/#feat=urlsearchparams)), but there is a [polyfill](https://github.com/WebReflection/url-search-params) available (make sure to polyfill the global environment).\n\nAlternatively, you can encode data using the [`qs`](https://github.com/ljharb/qs) library:\n\n```js\nconst qs = require('qs');\naxios.post('/foo', qs.stringify({ 'bar': 123 }));\n```\n\nOr in another way (ES6),\n\n```js\nimport qs from 'qs';\nconst data = { 'bar': 123 };\nconst options = {\n  method: 'POST',\n  headers: { 'content-type': 'application/x-www-form-urlencoded' },\n  data: qs.stringify(data),\n  url,\n};\naxios(options);\n```\n\n### Node.js\n\n#### Query string\n\nIn node.js, you can use the [`querystring`](https://nodejs.org/api/querystring.html) module as follows:\n\n```js\nconst querystring = require('querystring');\naxios.post('http://something.com/', querystring.stringify({ foo: 'bar' }));\n```\n\nor ['URLSearchParams'](https://nodejs.org/api/url.html#url_class_urlsearchparams) from ['url module'](https://nodejs.org/api/url.html) as follows:\n\n```js\nconst url = require('url');\nconst params = new url.URLSearchParams({ foo: 'bar' });\naxios.post('http://something.com/', params.toString());\n```\n\nYou can also use the [`qs`](https://github.com/ljharb/qs) library.\n\n###### NOTE\nThe `qs` library is preferable if you need to stringify nested objects, as the `querystring` method has known issues with that use case (https://github.com/nodejs/node-v0.x-archive/issues/1665).\n\n#### Form data\n\nIn node.js, you can use the [`form-data`](https://github.com/form-data/form-data) library as follows:\n\n```js\nconst FormData = require('form-data');\n \nconst form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'));\n\naxios.post('https://example.com', form, { headers: form.getHeaders() })\n```\n\nAlternatively, use an interceptor:\n\n```js\naxios.interceptors.request.use(config => {\n  if (config.data instanceof FormData) {\n    Object.assign(config.headers, config.data.getHeaders());\n  }\n  return config;\n});\n```\n\n## Semver\n\nUntil axios reaches a `1.0` release, breaking changes will be released with a new minor version. For example `0.5.1`, and `0.5.4` will have the same API, but `0.6.0` will have breaking changes.\n\n## Promises\n\naxios depends on a native ES6 Promise implementation to be [supported](http://caniuse.com/promises).\nIf your environment doesn't support ES6 Promises, you can [polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\naxios includes [TypeScript](http://typescriptlang.org) definitions.\n```typescript\nimport axios from 'axios';\naxios.get('/user?ID=12345');\n```\n\n## Resources\n\n* [Changelog](https://github.com/axios/axios/blob/master/CHANGELOG.md)\n* [Upgrade Guide](https://github.com/axios/axios/blob/master/UPGRADE_GUIDE.md)\n* [Ecosystem](https://github.com/axios/axios/blob/master/ECOSYSTEM.md)\n* [Contributing Guide](https://github.com/axios/axios/blob/master/CONTRIBUTING.md)\n* [Code of Conduct](https://github.com/axios/axios/blob/master/CODE_OF_CONDUCT.md)\n\n## Credits\n\naxios is heavily inspired by the [$http service](https://docs.angularjs.org/api/ng/service/$http) provided in [Angular](https://angularjs.org/). Ultimately axios is an effort to provide a standalone `$http`-like service for use outside of Angular.\n\n## License\n\n[MIT](LICENSE)\n",
      "readmeFilename" : "README.md",
      "jsdelivr" : "dist/axios.min.js",
      "_nodeVersion" : "12.16.1"
    },
    "0.4.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.4.1",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.4.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.4.1.tgz",
        "shasum" : "e6a375377d5abd3c4389039240059e08530e1881"
      },
      "dependencies" : {
        "es6-promise" : "^1.0.0"
      },
      "devDependencies" : {
        "grunt" : "^0.4.5",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-watch" : "^0.6.1",
        "webpack" : "^1.4.0-beta9",
        "webpack-dev-server" : "^1.4.10",
        "grunt-webpack" : "^1.0.8",
        "load-grunt-tasks" : "^0.6.0",
        "karma" : "^0.12.21",
        "karma-jasmine" : "^0.1.5",
        "grunt-karma" : "^0.8.3",
        "karma-phantomjs-launcher" : "^0.1.4",
        "karma-jasmine-ajax" : "^0.1.4",
        "grunt-update-json" : "^0.1.3",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-banner" : "^0.2.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js"
      },
      "_from" : "./",
      "_npmVersion" : "1.4.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.4.1",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      }
    },
    "0.5.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.5.0",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.5.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.5.0.tgz",
        "shasum" : "2f369e6309a46b182c38ce683ba4fbc608d5b4ef"
      },
      "dependencies" : {
        "es6-promise" : "^2.0.1"
      },
      "devDependencies" : {
        "grunt" : "^0.4.5",
        "grunt-banner" : "^0.2.3",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-contrib-watch" : "^0.6.1",
        "grunt-karma" : "^0.8.3",
        "grunt-ts" : "^1.12.1",
        "grunt-update-json" : "^0.1.3",
        "grunt-webpack" : "^1.0.8",
        "karma" : "^0.12.21",
        "karma-jasmine" : "^0.1.5",
        "karma-jasmine-ajax" : "^0.1.4",
        "karma-phantomjs-launcher" : "^0.1.4",
        "load-grunt-tasks" : "^0.6.0",
        "webpack" : "^1.4.0-beta9",
        "webpack-dev-server" : "^1.4.10"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.1.6",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.5.0",
      "gitHead" : "fa6c26a0e5eaad5d58071eb39d7afff0c7dc051c",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_shasum" : "2f369e6309a46b182c38ce683ba4fbc608d5b4ef",
      "_nodeVersion" : "0.10.33"
    },
    "0.9.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.9.1",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.9.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.9.1.tgz",
        "shasum" : "95608b16447ee29b033589854c3fc7ee2c06bf6e"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "2.11.6",
        "es6-promise" : "3.0.2",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.6.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "0.7.0",
        "grunt-contrib-nodeunit" : "0.4.1",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "17.3.1",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.3.2",
        "grunt-update-json" : "0.2.2",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.1.3",
        "jasmine-core" : "2.4.1",
        "karma" : "0.13.19",
        "karma-coverage" : "0.5.3",
        "karma-jasmine" : "0.3.6",
        "karma-jasmine-ajax" : "0.1.13",
        "karma-phantomjs-launcher" : "0.2.3",
        "karma-sinon" : "1.0.4",
        "karma-sourcemap-loader" : "0.3.7",
        "karma-webpack" : "1.7.0",
        "load-grunt-tasks" : "3.4.0",
        "minimist" : "1.2.0",
        "phantomjs" : "1.9.19",
        "webpack" : "1.12.11",
        "webpack-dev-server" : "1.14.1"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "grunt build",
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.14.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.9.1",
      "gitHead" : "5176623d6c70e9d66c17f7867703a8e9990554bd",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_shasum" : "95608b16447ee29b033589854c3fc7ee2c06bf6e",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "3.3.1"
    },
    "0.5.3" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.5.3",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.5.3.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.5.3.tgz",
        "shasum" : "a4d153cc753f430a14aad8a00d8b1017eeabf1a5"
      },
      "dependencies" : {
        "es6-promise" : "^2.0.1"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.2",
        "grunt" : "^0.4.5",
        "grunt-banner" : "^0.3.1",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-contrib-watch" : "^0.6.1",
        "grunt-eslint" : "^9.0.0",
        "grunt-karma" : "^0.10.1",
        "grunt-ts" : "^3.0.0",
        "grunt-update-json" : "^0.2.1",
        "grunt-webpack" : "^1.0.8",
        "karma" : "^0.12.31",
        "karma-coverage" : "^0.2.7",
        "karma-jasmine" : "^0.3.5",
        "karma-jasmine-ajax" : "^0.1.12",
        "karma-phantomjs-launcher" : "^0.1.4",
        "karma-webpack" : "^1.5.0",
        "load-grunt-tasks" : "^3.1.0",
        "webpack" : "^1.7.2",
        "webpack-dev-server" : "^1.7.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.7.0",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.5.3",
      "gitHead" : "9d31a867166e9224f0c5168d84560abe85868404",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_shasum" : "a4d153cc753f430a14aad8a00d8b1017eeabf1a5",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "0.10.33"
    },
    "0.8.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.8.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.8.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.8.0.tgz",
        "shasum" : "9c3648c395f704742845b7d70e5b7c11f9afd859"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "2.11.4",
        "es6-promise" : "3.0.2",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.5.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "0.6.0",
        "grunt-contrib-nodeunit" : "0.4.1",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "17.2.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.0.0-beta.5",
        "grunt-update-json" : "0.2.1",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.1.3",
        "jasmine-core" : "2.3.4",
        "karma" : "0.13.10",
        "karma-coverage" : "0.5.2",
        "karma-jasmine" : "0.3.6",
        "karma-jasmine-ajax" : "0.1.13",
        "karma-phantomjs-launcher" : "0.2.1",
        "karma-sinon" : "1.0.4",
        "karma-sourcemap-loader" : "0.3.5",
        "karma-webpack" : "1.7.0",
        "load-grunt-tasks" : "3.3.0",
        "minimist" : "1.2.0",
        "phantomjs" : "1.9.18",
        "webpack" : "1.12.2",
        "webpack-dev-server" : "1.12.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "grunt build",
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.14.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.8.0",
      "gitHead" : "908d12b8ef41af4de5226b7e88eb971798d99207",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_shasum" : "9c3648c395f704742845b7d70e5b7c11f9afd859",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "3.3.1"
    },
    "0.5.4" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.5.4",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.5.4.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.5.4.tgz",
        "shasum" : "e06f852257838133e69094d925ccb419de94fdfb"
      },
      "dependencies" : {
        "es6-promise" : "^2.0.1"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.2",
        "grunt" : "^0.4.5",
        "grunt-banner" : "^0.3.1",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-contrib-watch" : "^0.6.1",
        "grunt-eslint" : "^9.0.0",
        "grunt-karma" : "^0.10.1",
        "grunt-ts" : "^3.0.0",
        "grunt-update-json" : "^0.2.1",
        "grunt-webpack" : "^1.0.8",
        "karma" : "^0.12.31",
        "karma-coverage" : "^0.2.7",
        "karma-jasmine" : "^0.3.5",
        "karma-jasmine-ajax" : "^0.1.12",
        "karma-phantomjs-launcher" : "^0.1.4",
        "karma-webpack" : "^1.5.0",
        "load-grunt-tasks" : "^3.1.0",
        "webpack" : "^1.7.2",
        "webpack-dev-server" : "^1.7.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.7.0",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.5.4",
      "gitHead" : "8a4e502e3a76b8e41b2f896e05b92db3c0f543f7",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_shasum" : "e06f852257838133e69094d925ccb419de94fdfb",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "0.10.33"
    },
    "0.8.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.8.1",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.8.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.8.1.tgz",
        "shasum" : "e0eafec0f346139527dc3b79fdcbff8034a24045"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "2.11.4",
        "es6-promise" : "3.0.2",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.5.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "0.6.0",
        "grunt-contrib-nodeunit" : "0.4.1",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "17.2.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.0.0-beta.5",
        "grunt-update-json" : "0.2.1",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.1.3",
        "jasmine-core" : "2.3.4",
        "karma" : "0.13.10",
        "karma-coverage" : "0.5.2",
        "karma-jasmine" : "0.3.6",
        "karma-jasmine-ajax" : "0.1.13",
        "karma-phantomjs-launcher" : "0.2.1",
        "karma-sinon" : "1.0.4",
        "karma-sourcemap-loader" : "0.3.5",
        "karma-webpack" : "1.7.0",
        "load-grunt-tasks" : "3.3.0",
        "minimist" : "1.2.0",
        "phantomjs" : "1.9.18",
        "webpack" : "1.12.2",
        "webpack-dev-server" : "1.12.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "grunt build",
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.14.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.8.1",
      "gitHead" : "9a5dec2dc5aef6eaa0bc4f72f714656bcf29dac3",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_shasum" : "e0eafec0f346139527dc3b79fdcbff8034a24045",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "3.3.1"
    },
    "0.9.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.9.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.9.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.9.0.tgz",
        "shasum" : "89544ac5f55bc94f576db4e663d7530cb4f87d14"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "2.11.6",
        "es6-promise" : "3.0.2",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.6.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "0.7.0",
        "grunt-contrib-nodeunit" : "0.4.1",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "17.3.1",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.3.2",
        "grunt-update-json" : "0.2.2",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.1.3",
        "jasmine-core" : "2.4.1",
        "karma" : "0.13.19",
        "karma-coverage" : "0.5.3",
        "karma-jasmine" : "0.3.6",
        "karma-jasmine-ajax" : "0.1.13",
        "karma-phantomjs-launcher" : "0.2.3",
        "karma-sinon" : "1.0.4",
        "karma-sourcemap-loader" : "0.3.7",
        "karma-webpack" : "1.7.0",
        "load-grunt-tasks" : "3.4.0",
        "minimist" : "1.2.0",
        "phantomjs" : "1.9.19",
        "webpack" : "1.12.11",
        "webpack-dev-server" : "1.14.1"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "build" : "grunt build",
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.14.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.9.0",
      "gitHead" : "7ec97dd26b3af7bb0995eef178c4edd8989c3152",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_shasum" : "89544ac5f55bc94f576db4e663d7530cb4f87d14",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "3.3.1"
    },
    "0.2.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.2.0",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.2.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.2.0.tgz",
        "shasum" : "315cd618142078fd22f2cea35380caad19e32069"
      },
      "dependencies" : {
        "es6-promise" : "^1.0.0"
      },
      "devDependencies" : {
        "grunt" : "^0.4.5",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-watch" : "^0.6.1",
        "webpack" : "^1.3.3-beta2",
        "webpack-dev-server" : "^1.4.10",
        "grunt-webpack" : "^1.0.8",
        "load-grunt-tasks" : "^0.6.0",
        "karma" : "^0.12.21",
        "karma-jasmine" : "^0.1.5",
        "grunt-karma" : "^0.8.3",
        "karma-phantomjs-launcher" : "^0.1.4",
        "karma-jasmine-ajax" : "^0.1.4",
        "grunt-update-json" : "^0.1.3",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-banner" : "^0.2.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js"
      },
      "_from" : "./",
      "_npmVersion" : "1.4.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.2.0"
    },
    "0.2.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.2.1",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.2.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.2.1.tgz",
        "shasum" : "67d7695440e031286bad9b9b36ae455067f542b8"
      },
      "dependencies" : {
        "es6-promise" : "^1.0.0"
      },
      "devDependencies" : {
        "grunt" : "^0.4.5",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-watch" : "^0.6.1",
        "webpack" : "^1.3.3-beta2",
        "webpack-dev-server" : "^1.4.10",
        "grunt-webpack" : "^1.0.8",
        "load-grunt-tasks" : "^0.6.0",
        "karma" : "^0.12.21",
        "karma-jasmine" : "^0.1.5",
        "grunt-karma" : "^0.8.3",
        "karma-phantomjs-launcher" : "^0.1.4",
        "karma-jasmine-ajax" : "^0.1.4",
        "grunt-update-json" : "^0.1.3",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-banner" : "^0.2.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js"
      },
      "_from" : "./",
      "_npmVersion" : "1.4.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.2.1"
    },
    "0.3.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.3.0",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.3.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.3.0.tgz",
        "shasum" : "07cc545f0d39b6b0d168a3b3a55b49f90a9000c7"
      },
      "dependencies" : {
        "es6-promise" : "^1.0.0"
      },
      "devDependencies" : {
        "grunt" : "^0.4.5",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-watch" : "^0.6.1",
        "webpack" : "^1.4.0-beta9",
        "webpack-dev-server" : "^1.4.10",
        "grunt-webpack" : "^1.0.8",
        "load-grunt-tasks" : "^0.6.0",
        "karma" : "^0.12.21",
        "karma-jasmine" : "^0.1.5",
        "grunt-karma" : "^0.8.3",
        "karma-phantomjs-launcher" : "^0.1.4",
        "karma-jasmine-ajax" : "^0.1.4",
        "grunt-update-json" : "^0.1.3",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-banner" : "^0.2.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js"
      },
      "_from" : "./",
      "_npmVersion" : "1.4.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.3.0",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      }
    },
    "0.1.0" : {
      "name" : "axios",
      "description" : "Promise based XHR library",
      "version" : "0.1.0",
      "repository" : {
        "type" : "git",
        "url" : "https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.1.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.1.0.tgz",
        "shasum" : "854e14f2999c2ef7fab058654fd995dd183688f2"
      },
      "dependencies" : {
        "es6-promise" : "^1.0.0"
      },
      "devDependencies" : {
        "grunt" : "^0.4.5",
        "grunt-contrib-clean" : "^0.6.0",
        "grunt-contrib-watch" : "^0.6.1",
        "webpack" : "^1.3.3-beta2",
        "webpack-dev-server" : "^1.4.10",
        "grunt-webpack" : "^1.0.8",
        "load-grunt-tasks" : "^0.6.0",
        "karma" : "^0.12.21",
        "karma-jasmine" : "^0.1.5",
        "grunt-karma" : "^0.8.3",
        "karma-phantomjs-launcher" : "^0.1.4",
        "karma-jasmine-ajax" : "^0.1.4",
        "grunt-update-json" : "^0.1.3",
        "grunt-contrib-nodeunit" : "^0.4.1",
        "grunt-banner" : "^0.2.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/index.js"
      },
      "_from" : "./",
      "_npmVersion" : "1.4.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.1.0"
    },
    "0.10.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.10.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.10.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.10.0.tgz",
        "shasum" : "5b0ec0d5fb53e79b98b7bf84c0e9b1cf902fdfc4"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "2.11.8",
        "es6-promise" : "3.1.2",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.6.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "1.0.0",
        "grunt-contrib-nodeunit" : "1.0.0",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "18.0.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.3.2",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.2.0",
        "jasmine-core" : "2.4.1",
        "karma" : "0.13.21",
        "karma-chrome-launcher" : "^0.2.2",
        "karma-coverage" : "0.5.4",
        "karma-firefox-launcher" : "^0.1.7",
        "karma-jasmine" : "0.3.7",
        "karma-jasmine-ajax" : "0.1.13",
        "karma-opera-launcher" : "^0.3.0",
        "karma-phantomjs-launcher" : "1.0.0",
        "karma-safari-launcher" : "^0.1.1",
        "karma-sauce-launcher" : "^0.3.1",
        "karma-sinon" : "1.0.4",
        "karma-sourcemap-loader" : "0.3.7",
        "karma-webpack" : "1.7.0",
        "load-grunt-tasks" : "3.4.1",
        "minimist" : "1.2.0",
        "phantomjs-prebuilt" : "2.1.6",
        "sinon" : "1.17.3",
        "webpack" : "1.12.14",
        "webpack-dev-server" : "1.14.1"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.14.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.10.0",
      "gitHead" : "2797f10ea5d2cd963a8e5c80da319848bad9f499",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-16-east.internal.npmjs.com",
        "tmp" : "tmp/axios-0.10.0.tgz_1461214339472_0.5915569786448032"
      },
      "_shasum" : "5b0ec0d5fb53e79b98b7bf84c0e9b1cf902fdfc4",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "3.3.1"
    },
    "0.15.3" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.15.3",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.15.3.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.15.3.tgz",
        "shasum" : "2c9d638b2e191a08ea1d6cc988eadd6ba5bdc053"
      },
      "dependencies" : {
        "follow-redirects" : "1.0.0"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.9",
        "es6-promise" : "^4.0.5",
        "grunt" : "^1.0.1",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.0.0",
        "grunt-contrib-nodeunit" : "^1.0.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^19.0.0",
        "grunt-karma" : "^2.0.0",
        "grunt-ts" : "^6.0.0-beta.3",
        "grunt-typings" : "^0.1.5",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.0.0",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-phantomjs-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.1.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "phantomjs-prebuilt" : "^2.1.7",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.6.1",
        "typescript" : "^2.0.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.10.8",
      "_npmUser" : {
        "name" : "nickuraltsev",
        "email" : "nick.uraltsev@gmail.com"
      },
      "_id" : "axios@0.15.3",
      "gitHead" : "4976816808c4e81acad2393c429832afeaf9664d",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-18-east.internal.npmjs.com",
        "tmp" : "tmp/axios-0.15.3.tgz_1480283949051_0.7373273745179176"
      },
      "_shasum" : "2c9d638b2e191a08ea1d6cc988eadd6ba5bdc053",
      "_nodeVersion" : "7.0.0"
    },
    "0.16.2" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.16.2",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.16.2.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.16.2.tgz",
        "shasum" : "ba4f92f17167dfbab40983785454b9ac149c3c6d"
      },
      "dependencies" : {
        "follow-redirects" : "^1.2.3",
        "is-buffer" : "^1.1.5"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.9",
        "es6-promise" : "^4.0.5",
        "grunt" : "^1.0.1",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.0.0",
        "grunt-contrib-nodeunit" : "^1.0.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^19.0.0",
        "grunt-karma" : "^2.0.0",
        "grunt-ts" : "^6.0.0-beta.3",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.0.0",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-phantomjs-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.1.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "phantomjs-prebuilt" : "^2.1.7",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.6.1",
        "typescript" : "^2.0.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.10.10",
      "_npmUser" : {
        "name" : "nickuraltsev",
        "email" : "nick.uraltsev@gmail.com"
      },
      "_id" : "axios@0.16.2",
      "gitHead" : "46e275c407f81c44dd9aad419b6e861d8a936580",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/axios-0.16.2.tgz_1496518163672_0.8309127793181688"
      },
      "_shasum" : "ba4f92f17167dfbab40983785454b9ac149c3c6d",
      "_nodeVersion" : "6.10.1"
    },
    "0.17.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.17.1",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/axios/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.17.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.17.1.tgz",
        "shasum" : "2d8e3e5d0bdbd7327f91bc814f5c57660f81824d"
      },
      "dependencies" : {
        "follow-redirects" : "^1.2.5",
        "is-buffer" : "^1.1.5"
      },
      "devDependencies" : {
        "bundlesize" : "^0.5.7",
        "coveralls" : "^2.11.9",
        "es6-promise" : "^4.0.5",
        "grunt" : "^1.0.1",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.0.0",
        "grunt-contrib-nodeunit" : "^1.0.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^19.0.0",
        "grunt-karma" : "^2.0.0",
        "grunt-ts" : "^6.0.0-beta.3",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.0.0",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-phantomjs-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.1.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "phantomjs-prebuilt" : "^2.1.7",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.6.1",
        "typescript" : "^2.0.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test && bundlesize",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.10.10",
      "_npmUser" : {
        "name" : "nickuraltsev",
        "email" : "nick.uraltsev@gmail.com"
      },
      "_id" : "axios@0.17.1",
      "gitHead" : "ad1195f0702381a77b4f2863aad6ddb1002ffd51",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "bundlesize" : [ {
        "path" : "./dist/axios.min.js",
        "threshold" : "5kB"
      } ],
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/axios-0.17.1.tgz_1510442680505_0.5486412935424596"
      },
      "_shasum" : "2d8e3e5d0bdbd7327f91bc814f5c57660f81824d",
      "_nodeVersion" : "6.10.1"
    },
    "0.18.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.18.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/axios/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.18.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.18.0.tgz",
        "shasum" : "32d53e4851efdc0a11993b6cd000789d70c05102"
      },
      "dependencies" : {
        "follow-redirects" : "^1.3.0",
        "is-buffer" : "^1.1.5"
      },
      "devDependencies" : {
        "bundlesize" : "^0.5.7",
        "coveralls" : "^2.11.9",
        "es6-promise" : "^4.0.5",
        "grunt" : "^1.0.1",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.0.0",
        "grunt-contrib-nodeunit" : "^1.0.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^19.0.0",
        "grunt-karma" : "^2.0.0",
        "grunt-ts" : "^6.0.0-beta.3",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.0.0",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.1.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.6.1",
        "typescript" : "^2.0.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test && bundlesize",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.10.10",
      "_npmUser" : {
        "name" : "emilyemorehouse",
        "email" : "emilyemorehouse@gmail.com"
      },
      "_id" : "axios@0.18.0",
      "gitHead" : "d59c70fdfd35106130e9f783d0dbdcddd145b58f",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "bundlesize" : [ {
        "path" : "./dist/axios.min.js",
        "threshold" : "5kB"
      } ],
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/axios_0.18.0_1519082934092_0.24234210178813442"
      },
      "_shasum" : "32d53e4851efdc0a11993b6cd000789d70c05102",
      "_nodeVersion" : "6.9.5"
    },
    "0.15.2" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.15.2",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.15.2.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.15.2.tgz",
        "shasum" : "496f50980b2ce1ad2e195af93c2d03b4d035e90d"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.9",
        "es6-promise" : "^3.2.1",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.6.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "1.0.0",
        "grunt-contrib-nodeunit" : "1.0.0",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "18.0.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.3.2",
        "grunt-typings" : "0.1.5",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.2.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^0.13.22",
        "karma-chrome-launcher" : "^1.0.1",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-phantomjs-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.0.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "3.4.1",
        "minimist" : "^1.2.0",
        "phantomjs-prebuilt" : "^2.1.7",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.5.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.9.5",
      "_npmUser" : {
        "name" : "nickuraltsev",
        "email" : "nick.uraltsev@gmail.com"
      },
      "_id" : "axios@0.15.2",
      "gitHead" : "3af756049f102be2eebafdbb108f10173380a68d",
      "typings" : "./axios.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-16-east.internal.npmjs.com",
        "tmp" : "tmp/axios-0.15.2.tgz_1476754397518_0.807653674390167"
      },
      "_shasum" : "496f50980b2ce1ad2e195af93c2d03b4d035e90d",
      "_nodeVersion" : "6.2.2"
    },
    "0.16.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.16.1",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.16.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.16.1.tgz",
        "shasum" : "c0b6d26600842384b8f509e57111f0d2df8223ca"
      },
      "dependencies" : {
        "follow-redirects" : "^1.2.3"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.9",
        "es6-promise" : "^4.0.5",
        "grunt" : "^1.0.1",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.0.0",
        "grunt-contrib-nodeunit" : "^1.0.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^19.0.0",
        "grunt-karma" : "^2.0.0",
        "grunt-ts" : "^6.0.0-beta.3",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.0.0",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-phantomjs-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.1.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "phantomjs-prebuilt" : "^2.1.7",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.6.1",
        "typescript" : "^2.0.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.10.10",
      "_npmUser" : {
        "name" : "nickuraltsev",
        "email" : "nick.uraltsev@gmail.com"
      },
      "_id" : "axios@0.16.1",
      "gitHead" : "5c8095e48329dacaec1f8d43a9b84ed275fbd0ef",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-18-east.internal.npmjs.com",
        "tmp" : "tmp/axios-0.16.1.tgz_1491677517114_0.6866208903957158"
      },
      "_shasum" : "c0b6d26600842384b8f509e57111f0d2df8223ca",
      "_nodeVersion" : "6.10.1"
    },
    "0.17.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.17.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/axios/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.17.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.17.0.tgz",
        "shasum" : "7da747916db803f761651d6091d708789b953c6a"
      },
      "dependencies" : {
        "follow-redirects" : "^1.2.3",
        "is-buffer" : "^1.1.5"
      },
      "devDependencies" : {
        "bundlesize" : "^0.5.7",
        "coveralls" : "^2.11.9",
        "es6-promise" : "^4.0.5",
        "grunt" : "^1.0.1",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.0.0",
        "grunt-contrib-nodeunit" : "^1.0.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^19.0.0",
        "grunt-karma" : "^2.0.0",
        "grunt-ts" : "^6.0.0-beta.3",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.0.0",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-phantomjs-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.1.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "phantomjs-prebuilt" : "^2.1.7",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.6.1",
        "typescript" : "^2.0.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test && bundlesize",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.10.10",
      "_npmUser" : {
        "name" : "nickuraltsev",
        "email" : "nick.uraltsev@gmail.com"
      },
      "_id" : "axios@0.17.0",
      "gitHead" : "2c0e3183215d9a5fbc2ee8f35f459ac0e4d9f99c",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "bundlesize" : [ {
        "path" : "./dist/axios.min.js",
        "threshold" : "5kB"
      } ],
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/axios-0.17.0.tgz_1508608890069_0.7621918669901788"
      },
      "_shasum" : "7da747916db803f761651d6091d708789b953c6a",
      "_nodeVersion" : "6.10.1"
    },
    "0.15.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.15.1",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.15.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.15.1.tgz",
        "shasum" : "9395b9ba25005e478dfd7239e8c4345ff10cd85b"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.9",
        "es6-promise" : "^3.2.1",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.6.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "1.0.0",
        "grunt-contrib-nodeunit" : "1.0.0",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "18.0.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.3.2",
        "grunt-typings" : "0.1.5",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.2.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^0.13.22",
        "karma-chrome-launcher" : "^1.0.1",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-phantomjs-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.0.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "3.4.1",
        "minimist" : "^1.2.0",
        "phantomjs-prebuilt" : "^2.1.7",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.5.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.9.5",
      "_npmUser" : {
        "name" : "nickuraltsev",
        "email" : "nick.uraltsev@gmail.com"
      },
      "_id" : "axios@0.15.1",
      "gitHead" : "3f8b128da4ab11e34f0b880381f9395b2ab0e22f",
      "typings" : "./axios.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-12-west.internal.npmjs.com",
        "tmp" : "tmp/axios-0.15.1.tgz_1476513563518_0.10022198990918696"
      },
      "_shasum" : "9395b9ba25005e478dfd7239e8c4345ff10cd85b",
      "_nodeVersion" : "6.2.2"
    },
    "0.16.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.16.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.16.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.16.0.tgz",
        "shasum" : "6ed9771d815f429e7510f2838262957c4953d3b6"
      },
      "dependencies" : {
        "follow-redirects" : "1.0.0"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.9",
        "es6-promise" : "^4.0.5",
        "grunt" : "^1.0.1",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.0.0",
        "grunt-contrib-nodeunit" : "^1.0.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^19.0.0",
        "grunt-karma" : "^2.0.0",
        "grunt-ts" : "^6.0.0-beta.3",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.0.0",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-phantomjs-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.1.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "phantomjs-prebuilt" : "^2.1.7",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.6.1",
        "typescript" : "^2.0.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "4.1.2",
      "_npmUser" : {
        "name" : "nickuraltsev",
        "email" : "nick.uraltsev@gmail.com"
      },
      "_id" : "axios@0.16.0",
      "gitHead" : "19b794848047e51f5d8689cf48820c986df49d25",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-12-west.internal.npmjs.com",
        "tmp" : "tmp/axios-0.16.0.tgz_1491013868789_0.13724043127149343"
      },
      "_shasum" : "6ed9771d815f429e7510f2838262957c4953d3b6",
      "_nodeVersion" : "7.5.0"
    },
    "0.19.0-beta.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.19.0-beta.1",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/axios/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.19.0-beta.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.19.0-beta.1.tgz",
        "shasum" : "3d6a9ee75885d1fd39e108df9a4fb2e48e1af1e8"
      },
      "dependencies" : {
        "follow-redirects" : "^1.4.1",
        "is-buffer" : "^2.0.2"
      },
      "devDependencies" : {
        "bundlesize" : "^0.17.0",
        "coveralls" : "^3.0.0",
        "es6-promise" : "^4.2.4",
        "grunt" : "^1.0.2",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.1.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^20.1.0",
        "grunt-karma" : "^2.0.0",
        "grunt-mocha-test" : "^0.13.3",
        "grunt-ts" : "^6.0.0-beta.19",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.2.0",
        "karma-coverage" : "^1.1.1",
        "karma-firefox-launcher" : "^1.1.0",
        "karma-jasmine" : "^1.1.1",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.2.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "mocha" : "^5.2.0",
        "sinon" : "^4.5.0",
        "typescript" : "^2.8.1",
        "url-search-params" : "^0.10.0",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test && bundlesize",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
        "fix" : "eslint --fix lib/**/*.js"
      },
      "_npmVersion" : "6.1.0",
      "_npmUser" : {
        "name" : "emilyemorehouse",
        "email" : "emilyemorehouse@gmail.com"
      },
      "_id" : "axios@0.19.0-beta.1",
      "gitHead" : "527381198e8112dd298918b3d9d6c643763a59c3",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "bundlesize" : [ {
        "path" : "./dist/axios.min.js",
        "threshold" : "5kB"
      } ],
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/axios_0.19.0-beta.1_1533840265098_0.9346787865811605"
      },
      "readme" : "# axios\n\n[![npm version](https://img.shields.io/npm/v/axios.svg?style=flat-square)](https://www.npmjs.org/package/axios)\n[![build status](https://img.shields.io/travis/axios/axios.svg?style=flat-square)](https://travis-ci.org/axios/axios)\n[![code coverage](https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square)](https://coveralls.io/r/mzabriskie/axios)\n[![install size](https://packagephobia.now.sh/badge?p=axios)](https://packagephobia.now.sh/result?p=axios)\n[![npm downloads](https://img.shields.io/npm/dm/axios.svg?style=flat-square)](http://npm-stat.com/charts.html?package=axios)\n[![gitter chat](https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square)](https://gitter.im/mzabriskie/axios)\n[![code helpers](https://www.codetriage.com/axios/axios/badges/users.svg)](https://www.codetriage.com/axios/axios)\n\nPromise based HTTP client for the browser and node.js\n\n## Features\n\n- Make [XMLHttpRequests](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) from the browser\n- Make [http](http://nodejs.org/api/http.html) requests from node.js\n- Supports the [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) API\n- Intercept request and response\n- Transform request and response data\n- Cancel requests\n- Automatic transforms for JSON data\n- Client side support for protecting against [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png) | ![Safari](https://raw.github.com/alrra/browser-logos/master/src/safari/safari_48x48.png) | ![Opera](https://raw.github.com/alrra/browser-logos/master/src/opera/opera_48x48.png) | ![Edge](https://raw.github.com/alrra/browser-logos/master/src/edge/edge_48x48.png) | ![IE](https://raw.github.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png) |\n--- | --- | --- | --- | --- | --- |\nLatest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | 11 ✔ |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing cdn:\n\n```html\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n```\n\n## Example\n\nPerforming a `GET` request\n\n```js\nconst axios = require('axios');\n\n// Make a request for a user with a given ID\naxios.get('/user?ID=12345')\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n  .then(function () {\n    // always executed\n  });\n\n// Optionally the request above could also be done as\naxios.get('/user', {\n    params: {\n      ID: 12345\n    }\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  })\n  .then(function () {\n    // always executed\n  });  \n\n// Want to use async/await? Add the `async` keyword to your outer function/method.\nasync function getUser() {\n  try {\n    const response = await axios.get('/user?ID=12345');\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n```\n\n> **NOTE:** `async/await` is part of ECMAScript 2017 and is not supported in Internet\n> Explorer and older browsers, so use with caution.\n\nPerforming a `POST` request\n\n```js\naxios.post('/user', {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n```\n\nPerforming multiple concurrent requests\n\n```js\nfunction getUserAccount() {\n  return axios.get('/user/12345');\n}\n\nfunction getUserPermissions() {\n  return axios.get('/user/12345/permissions');\n}\n\naxios.all([getUserAccount(), getUserPermissions()])\n  .then(axios.spread(function (acct, perms) {\n    // Both requests are now complete\n  }));\n```\n\n## axios API\n\nRequests can be made by passing the relevant config to `axios`.\n\n##### axios(config)\n\n```js\n// Send a POST request\naxios({\n  method: 'post',\n  url: '/user/12345',\n  data: {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  }\n});\n```\n\n```js\n// GET request for remote image\naxios({\n  method:'get',\n  url:'http://bit.ly/2mTM3nY',\n  responseType:'stream'\n})\n  .then(function(response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Send a GET request (default method)\naxios('/user/12345');\n```\n\n### Request method aliases\n\nFor convenience aliases have been provided for all supported request methods.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### NOTE\nWhen using the alias methods `url`, `method`, and `data` properties don't need to be specified in config.\n\n### Concurrency\n\nHelper functions for dealing with concurrent requests.\n\n##### axios.all(iterable)\n##### axios.spread(callback)\n\n### Creating an instance\n\nYou can create a new instance of axios with a custom config.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Instance methods\n\nThe available instance methods are listed below. The specified config will be merged with the instance config.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Request Config\n\nThese are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.\n\n```js\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n\n  // `baseURL` will be prepended to `url` unless `url` is absolute.\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  // to methods of that instance.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `transformRequest` allows changes to the request data before it is sent to the server\n  // This is only applicable for request methods 'PUT', 'POST', and 'PATCH'\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  // FormData or Stream\n  // You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `transformResponse` allows changes to the response data to be made before\n  // it is passed to then/catch\n  transformResponse: [function (data) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `headers` are custom headers to be sent\n  headers: {'X-Requested-With': 'XMLHttpRequest'},\n\n  // `params` are the URL parameters to be sent with the request\n  // Must be a plain object or a URLSearchParams object\n  params: {\n    ID: 12345\n  },\n\n  // `paramsSerializer` is an optional function in charge of serializing `params`\n  // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)\n  paramsSerializer: function(params) {\n    return Qs.stringify(params, {arrayFormat: 'brackets'})\n  },\n\n  // `data` is the data to be sent as the request body\n  // Only applicable for request methods 'PUT', 'POST', and 'PATCH'\n  // When no `transformRequest` is set, must be of one of the following types:\n  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n  // - Browser only: FormData, File, Blob\n  // - Node only: Stream, Buffer\n  data: {\n    firstName: 'Fred'\n  },\n\n  // `timeout` specifies the number of milliseconds before the request times out.\n  // If the request takes longer than `timeout`, the request will be aborted.\n  timeout: 1000,\n\n  // `withCredentials` indicates whether or not cross-site Access-Control requests\n  // should be made using credentials\n  withCredentials: false, // default\n\n  // `adapter` allows custom handling of requests which makes testing easier.\n  // Return a promise and supply a valid response (see lib/adapters/README.md).\n  adapter: function (config) {\n    /* ... */\n  },\n\n  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.\n  // This will set an `Authorization` header, overwriting any existing\n  // `Authorization` custom headers you have set using `headers`.\n  auth: {\n    username: 'janedoe',\n    password: 's00pers3cret'\n  },\n\n  // `responseType` indicates the type of data that the server will respond with\n  // options are 'arraybuffer', 'blob', 'document', 'json', 'text', 'stream'\n  responseType: 'json', // default\n\n  // `responseEncoding` indicates encoding to use for decoding responses\n  // Note: Ignored for `responseType` of 'stream' or client-side requests\n  responseEncoding: 'utf8', // default\n\n  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token\n  xsrfCookieName: 'XSRF-TOKEN', // default\n\n  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value\n  xsrfHeaderName: 'X-XSRF-TOKEN', // default\n\n  // `onUploadProgress` allows handling of progress events for uploads\n  onUploadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `onDownloadProgress` allows handling of progress events for downloads\n  onDownloadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `maxContentLength` defines the max size of the http response content in bytes allowed\n  maxContentLength: 2000,\n\n  // `validateStatus` defines whether to resolve or reject the promise for a given\n  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\n  // or `undefined`), the promise will be resolved; otherwise, the promise will be\n  // rejected.\n  validateStatus: function (status) {\n    return status >= 200 && status < 300; // default\n  },\n\n  // `maxRedirects` defines the maximum number of redirects to follow in node.js.\n  // If set to 0, no redirects will be followed.\n  maxRedirects: 5, // default\n\n  // `socketPath` defines a UNIX Socket to be used in node.js.\n  // e.g. '/var/run/docker.sock' to send requests to the docker daemon.\n  // Only either `socketPath` or `proxy` can be specified.\n  // If both are specified, `socketPath` is used.\n  socketPath: null, // default\n\n  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http\n  // and https requests, respectively, in node.js. This allows options to be added like\n  // `keepAlive` that are not enabled by default.\n  httpAgent: new http.Agent({ keepAlive: true }),\n  httpsAgent: new https.Agent({ keepAlive: true }),\n\n  // 'proxy' defines the hostname and port of the proxy server.\n  // You can also define your proxy using the conventional `http_proxy` and\n  // `https_proxy` environment variables. If you are using environment variables\n  // for your proxy configuration, you can also define a `no_proxy` environment\n  // variable as a comma-separated list of domains that should not be proxied.\n  // Use `false` to disable proxies, ignoring environment variables.\n  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and\n  // supplies credentials.\n  // This will set an `Proxy-Authorization` header, overwriting any existing\n  // `Proxy-Authorization` custom headers you have set using `headers`.\n  proxy: {\n    host: '127.0.0.1',\n    port: 9000,\n    auth: {\n      username: 'mikeymike',\n      password: 'rapunz3l'\n    }\n  },\n\n  // `cancelToken` specifies a cancel token that can be used to cancel the request\n  // (see Cancellation section below for details)\n  cancelToken: new CancelToken(function (cancel) {\n  })\n}\n```\n\n## Response Schema\n\nThe response for a request contains the following information.\n\n```js\n{\n  // `data` is the response that was provided by the server\n  data: {},\n\n  // `status` is the HTTP status code from the server response\n  status: 200,\n\n  // `statusText` is the HTTP status message from the server response\n  statusText: 'OK',\n\n  // `headers` the headers that the server responded with\n  // All header names are lower cased\n  headers: {},\n\n  // `config` is the config that was provided to `axios` for the request\n  config: {},\n\n  // `request` is the request that generated this response\n  // It is the last ClientRequest instance in node.js (in redirects)\n  // and an XMLHttpRequest instance the browser\n  request: {}\n}\n```\n\nWhen using `then`, you will receive the response as follows:\n\n```js\naxios.get('/user/12345')\n  .then(function(response) {\n    console.log(response.data);\n    console.log(response.status);\n    console.log(response.statusText);\n    console.log(response.headers);\n    console.log(response.config);\n  });\n```\n\nWhen using `catch`, or passing a [rejection callback](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then) as second parameter of `then`, the response will be available through the `error` object as explained in the [Handling Errors](#handling-errors) section.\n\n## Config Defaults\n\nYou can specify config defaults that will be applied to every request.\n\n### Global axios defaults\n\n```js\naxios.defaults.baseURL = 'https://api.example.com';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n```\n\n### Custom instance defaults\n\n```js\n// Set config defaults when creating the instance\nconst instance = axios.create({\n  baseURL: 'https://api.example.com'\n});\n\n// Alter defaults after instance has been created\ninstance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n```\n\n### Config order of precedence\n\nConfig will be merged with an order of precedence. The order is library defaults found in [lib/defaults.js](https://github.com/axios/axios/blob/master/lib/defaults.js#L28), then `defaults` property of the instance, and finally `config` argument for the request. The latter will take precedence over the former. Here's an example.\n\n```js\n// Create an instance using the config defaults provided by the library\n// At this point the timeout config value is `0` as is the default for the library\nconst instance = axios.create();\n\n// Override timeout default for the library\n// Now all requests using this instance will wait 2.5 seconds before timing out\ninstance.defaults.timeout = 2500;\n\n// Override timeout for this request as it's known to take a long time\ninstance.get('/longRequest', {\n  timeout: 5000\n});\n```\n\n## Interceptors\n\nYou can intercept requests or responses before they are handled by `then` or `catch`.\n\n```js\n// Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    // Do something with response data\n    return response;\n  }, function (error) {\n    // Do something with response error\n    return Promise.reject(error);\n  });\n```\n\nIf you may need to remove an interceptor later you can.\n\n```js\nconst myInterceptor = axios.interceptors.request.use(function () {/*...*/});\naxios.interceptors.request.eject(myInterceptor);\n```\n\nYou can add interceptors to a custom instance of axios.\n\n```js\nconst instance = axios.create();\ninstance.interceptors.request.use(function () {/*...*/});\n```\n\n## Handling Errors\n\n```js\naxios.get('/user/12345')\n  .catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n```\n\nYou can define a custom HTTP status code error range using the `validateStatus` config option.\n\n```js\naxios.get('/user/12345', {\n  validateStatus: function (status) {\n    return status < 500; // Reject only if the status code is greater than or equal to 500\n  }\n})\n```\n\n## Cancellation\n\nYou can cancel a request using a *cancel token*.\n\n> The axios cancel token API is based on the withdrawn [cancelable promises proposal](https://github.com/tc39/proposal-cancelable-promises).\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\naxios.get('/user/12345', {\n  cancelToken: source.token\n}).catch(function(thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('Request canceled', thrown.message);\n  } else {\n    // handle error\n  }\n});\n\naxios.post('/user/12345', {\n  name: 'new name'\n}, {\n  cancelToken: source.token\n})\n\n// cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user.');\n```\n\nYou can also create a cancel token by passing an executor function to the `CancelToken` constructor:\n\n```js\nconst CancelToken = axios.CancelToken;\nlet cancel;\n\naxios.get('/user/12345', {\n  cancelToken: new CancelToken(function executor(c) {\n    // An executor function receives a cancel function as a parameter\n    cancel = c;\n  })\n});\n\n// cancel the request\ncancel();\n```\n\n> Note: you can cancel several requests with the same cancel token.\n\n## Using application/x-www-form-urlencoded format\n\nBy default, axios serializes JavaScript objects to `JSON`. To send data in the `application/x-www-form-urlencoded` format instead, you can use one of the following options.\n\n### Browser\n\nIn a browser, you can use the [`URLSearchParams`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams) API as follows:\n\n```js\nconst params = new URLSearchParams();\nparams.append('param1', 'value1');\nparams.append('param2', 'value2');\naxios.post('/foo', params);\n```\n\n> Note that `URLSearchParams` is not supported by all browsers (see [caniuse.com](http://www.caniuse.com/#feat=urlsearchparams)), but there is a [polyfill](https://github.com/WebReflection/url-search-params) available (make sure to polyfill the global environment).\n\nAlternatively, you can encode data using the [`qs`](https://github.com/ljharb/qs) library:\n\n```js\nconst qs = require('qs');\naxios.post('/foo', qs.stringify({ 'bar': 123 }));\n```\n\nOr in another way (ES6),\n\n```js\nimport qs from 'qs';\nconst data = { 'bar': 123 };\nconst options = {\n  method: 'POST',\n  headers: { 'content-type': 'application/x-www-form-urlencoded' },\n  data: qs.stringify(data),\n  url,\n};\naxios(options);\n```\n\n### Node.js\n\nIn node.js, you can use the [`querystring`](https://nodejs.org/api/querystring.html) module as follows:\n\n```js\nconst querystring = require('querystring');\naxios.post('http://something.com/', querystring.stringify({ foo: 'bar' }));\n```\n\nYou can also use the [`qs`](https://github.com/ljharb/qs) library.\n\n## Semver\n\nUntil axios reaches a `1.0` release, breaking changes will be released with a new minor version. For example `0.5.1`, and `0.5.4` will have the same API, but `0.6.0` will have breaking changes.\n\n## Promises\n\naxios depends on a native ES6 Promise implementation to be [supported](http://caniuse.com/promises).\nIf your environment doesn't support ES6 Promises, you can [polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\naxios includes [TypeScript](http://typescriptlang.org) definitions.\n```typescript\nimport axios from 'axios';\naxios.get('/user?ID=12345');\n```\n\n## Resources\n\n* [Changelog](https://github.com/axios/axios/blob/master/CHANGELOG.md)\n* [Upgrade Guide](https://github.com/axios/axios/blob/master/UPGRADE_GUIDE.md)\n* [Ecosystem](https://github.com/axios/axios/blob/master/ECOSYSTEM.md)\n* [Contributing Guide](https://github.com/axios/axios/blob/master/CONTRIBUTING.md)\n* [Code of Conduct](https://github.com/axios/axios/blob/master/CODE_OF_CONDUCT.md)\n\n## Credits\n\naxios is heavily inspired by the [$http service](https://docs.angularjs.org/api/ng/service/$http) provided in [Angular](https://angularjs.org/). Ultimately axios is an effort to provide a standalone `$http`-like service for use outside of Angular.\n\n## License\n\nMIT\n",
      "readmeFilename" : "README.md",
      "_nodeVersion" : "8.11.2"
    },
    "0.15.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.15.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.15.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.15.0.tgz",
        "shasum" : "69a4cbe8646866a22f1075048c41724ecef447ce"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.9",
        "es6-promise" : "^3.2.1",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.6.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "1.0.0",
        "grunt-contrib-nodeunit" : "1.0.0",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "18.0.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.3.2",
        "grunt-typings" : "0.1.5",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.2.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^0.13.22",
        "karma-chrome-launcher" : "^1.0.1",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-phantomjs-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.0.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "3.4.1",
        "minimist" : "^1.2.0",
        "phantomjs-prebuilt" : "^2.1.7",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.5.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.9.5",
      "_npmUser" : {
        "name" : "nickuraltsev",
        "email" : "nick.uraltsev@gmail.com"
      },
      "_id" : "axios@0.15.0",
      "gitHead" : "e8c5c49ea2f2cf4fd45eaf81270a6d23546e2c93",
      "typings" : "./axios.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-12-west.internal.npmjs.com",
        "tmp" : "tmp/axios-0.15.0.tgz_1476160841391_0.021248114528134465"
      },
      "_shasum" : "69a4cbe8646866a22f1075048c41724ecef447ce",
      "_nodeVersion" : "6.2.2"
    },
    "0.13.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.13.1",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.13.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.13.1.tgz",
        "shasum" : "3e67abfe4333bc9d2d5fe6fbd13b4694eafc8df8"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.9",
        "es6-promise" : "^3.2.1",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.6.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "1.0.0",
        "grunt-contrib-nodeunit" : "1.0.0",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "18.0.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.3.2",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.2.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^0.13.22",
        "karma-chrome-launcher" : "^1.0.1",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-phantomjs-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.0.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "3.4.1",
        "minimist" : "^1.2.0",
        "phantomjs-prebuilt" : "^2.1.7",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.5.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.9.5",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.13.1",
      "gitHead" : "377efb89aed819ed1cd416b69f057632ad5664a5",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-12-west.internal.npmjs.com",
        "tmp" : "tmp/axios-0.13.1.tgz_1468689204636_0.7909611663781106"
      },
      "_shasum" : "3e67abfe4333bc9d2d5fe6fbd13b4694eafc8df8",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "3.3.1"
    },
    "0.14.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.14.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.14.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.14.0.tgz",
        "shasum" : "40f24f2f4e913b9faa43d3a7b2e40ab8729afa90"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.9",
        "es6-promise" : "^3.2.1",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.6.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "1.0.0",
        "grunt-contrib-nodeunit" : "1.0.0",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "18.0.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.3.2",
        "grunt-typings" : "0.1.5",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.2.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^0.13.22",
        "karma-chrome-launcher" : "^1.0.1",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-phantomjs-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.0.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "3.4.1",
        "minimist" : "^1.2.0",
        "phantomjs-prebuilt" : "^2.1.7",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.5.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.9.5",
      "_npmUser" : {
        "name" : "nickuraltsev",
        "email" : "nick.uraltsev@gmail.com"
      },
      "_id" : "axios@0.14.0",
      "gitHead" : "c96348660dacddd32676924d4f1bde535c45fb77",
      "typings" : "./axios.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-16-east.internal.npmjs.com",
        "tmp" : "tmp/axios-0.14.0.tgz_1472322619923_0.0996575120370835"
      },
      "_shasum" : "40f24f2f4e913b9faa43d3a7b2e40ab8729afa90",
      "_nodeVersion" : "6.2.2"
    },
    "0.13.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.13.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.13.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.13.0.tgz",
        "shasum" : "b3b5243ef7e67794fc951bef0298d0bab29ffd54"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "^2.11.9",
        "es6-promise" : "^3.2.1",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.6.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "1.0.0",
        "grunt-contrib-nodeunit" : "1.0.0",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "18.0.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.3.2",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.2.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^0.13.22",
        "karma-chrome-launcher" : "^1.0.1",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-phantomjs-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.0.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "3.4.1",
        "minimist" : "^1.2.0",
        "phantomjs-prebuilt" : "^2.1.7",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.5.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.9.5",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.13.0",
      "gitHead" : "ff919487e13430098d3da37a37cc04c3f24b59c4",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-16-east.internal.npmjs.com",
        "tmp" : "tmp/axios-0.13.0.tgz_1468438960057_0.3536213035695255"
      },
      "_shasum" : "b3b5243ef7e67794fc951bef0298d0bab29ffd54",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "3.3.1"
    },
    "0.11.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.11.1",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.11.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.11.1.tgz",
        "shasum" : "39cdb65813e2c549d1c2e9c389f7e33aa65cca22"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "2.11.8",
        "es6-promise" : "3.1.2",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.6.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "1.0.0",
        "grunt-contrib-nodeunit" : "1.0.0",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "18.0.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.3.2",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.2.0",
        "jasmine-core" : "2.4.1",
        "karma" : "0.13.21",
        "karma-chrome-launcher" : "^0.2.2",
        "karma-coverage" : "0.5.4",
        "karma-firefox-launcher" : "^0.1.7",
        "karma-jasmine" : "0.3.7",
        "karma-jasmine-ajax" : "0.1.13",
        "karma-opera-launcher" : "^0.3.0",
        "karma-phantomjs-launcher" : "1.0.0",
        "karma-safari-launcher" : "^0.1.1",
        "karma-sauce-launcher" : "^0.3.1",
        "karma-sinon" : "1.0.4",
        "karma-sourcemap-loader" : "0.3.7",
        "karma-webpack" : "1.7.0",
        "load-grunt-tasks" : "3.4.1",
        "minimist" : "1.2.0",
        "phantomjs-prebuilt" : "2.1.6",
        "sinon" : "1.17.3",
        "webpack" : "1.12.14",
        "webpack-dev-server" : "1.14.1"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "2.14.3",
      "_npmUser" : {
        "name" : "mzabriskie",
        "email" : "mzabriskie@gmail.com"
      },
      "_id" : "axios@0.11.1",
      "gitHead" : "2e949495f0177bd4f4faab8ce031aa32bef50f47",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-12-west.internal.npmjs.com",
        "tmp" : "tmp/axios-0.11.1.tgz_1463500767835_0.40583729767240584"
      },
      "_shasum" : "39cdb65813e2c549d1c2e9c389f7e33aa65cca22",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "3.3.1"
    },
    "0.12.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.12.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.12.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.12.0.tgz",
        "shasum" : "b907b0221cc34ec1c9fac18ec7f07ddf95785ba4"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "2.11.8",
        "es6-promise" : "3.1.2",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.6.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "1.0.0",
        "grunt-contrib-nodeunit" : "1.0.0",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "18.0.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.3.2",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.2.0",
        "jasmine-core" : "2.4.1",
        "karma" : "0.13.21",
        "karma-chrome-launcher" : "^0.2.2",
        "karma-coverage" : "0.5.4",
        "karma-firefox-launcher" : "^0.1.7",
        "karma-jasmine" : "0.3.7",
        "karma-jasmine-ajax" : "0.1.13",
        "karma-opera-launcher" : "^0.3.0",
        "karma-phantomjs-launcher" : "1.0.0",
        "karma-safari-launcher" : "^0.1.1",
        "karma-sauce-launcher" : "^0.3.1",
        "karma-sinon" : "1.0.4",
        "karma-sourcemap-loader" : "0.3.7",
        "karma-webpack" : "1.7.0",
        "load-grunt-tasks" : "3.4.1",
        "minimist" : "1.2.0",
        "phantomjs-prebuilt" : "2.1.6",
        "sinon" : "1.17.3",
        "webpack" : "1.12.14",
        "webpack-dev-server" : "1.14.1",
        "url-search-params" : "0.5.0"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.8.6",
      "_npmUser" : {
        "name" : "nickuraltsev",
        "email" : "nick.uraltsev@gmail.com"
      },
      "_id" : "axios@0.12.0",
      "gitHead" : "4d1269cb4a9773db128f459046b6c4c2a0926859",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-16-east.internal.npmjs.com",
        "tmp" : "tmp/axios-0.12.0.tgz_1464758575925_0.8698380121495575"
      },
      "_shasum" : "b907b0221cc34ec1c9fac18ec7f07ddf95785ba4",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "6.0.0"
    },
    "0.11.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.11.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/mzabriskie/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.11.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.11.0.tgz",
        "shasum" : "50adc59bd0f11bee89a383b24b2d407648e6d6e8"
      },
      "dependencies" : {
        "follow-redirects" : "0.0.7"
      },
      "devDependencies" : {
        "coveralls" : "2.11.8",
        "es6-promise" : "3.1.2",
        "grunt" : "0.4.5",
        "grunt-banner" : "0.6.0",
        "grunt-cli" : "0.1.13",
        "grunt-contrib-clean" : "1.0.0",
        "grunt-contrib-nodeunit" : "1.0.0",
        "grunt-contrib-watch" : "0.6.1",
        "grunt-eslint" : "18.0.0",
        "grunt-karma" : "0.12.1",
        "grunt-ts" : "5.3.2",
        "grunt-webpack" : "1.0.11",
        "istanbul-instrumenter-loader" : "^0.2.0",
        "jasmine-core" : "2.4.1",
        "karma" : "0.13.21",
        "karma-chrome-launcher" : "^0.2.2",
        "karma-coverage" : "0.5.4",
        "karma-firefox-launcher" : "^0.1.7",
        "karma-jasmine" : "0.3.7",
        "karma-jasmine-ajax" : "0.1.13",
        "karma-opera-launcher" : "^0.3.0",
        "karma-phantomjs-launcher" : "1.0.0",
        "karma-safari-launcher" : "^0.1.1",
        "karma-sauce-launcher" : "^0.3.1",
        "karma-sinon" : "1.0.4",
        "karma-sourcemap-loader" : "0.3.7",
        "karma-webpack" : "1.7.0",
        "load-grunt-tasks" : "3.4.1",
        "minimist" : "1.2.0",
        "phantomjs-prebuilt" : "2.1.6",
        "sinon" : "1.17.3",
        "webpack" : "1.12.14",
        "webpack-dev-server" : "1.14.1"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_from" : ".",
      "_npmVersion" : "3.8.6",
      "_npmUser" : {
        "name" : "nickuraltsev",
        "email" : "nick.uraltsev@gmail.com"
      },
      "_id" : "axios@0.11.0",
      "gitHead" : "82d34ac743022aaf0c4e68650b39d2f7edab73a4",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "_npmOperationalInternal" : {
        "host" : "packages-16-east.internal.npmjs.com",
        "tmp" : "tmp/axios-0.11.0.tgz_1461730790535_0.26179565815255046"
      },
      "_shasum" : "50adc59bd0f11bee89a383b24b2d407648e6d6e8",
      "typescript" : {
        "definition" : "./axios.d.ts"
      },
      "_nodeVersion" : "6.0.0"
    },
    "0.19.2" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.19.2",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/axios/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.19.2.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.19.2.tgz",
        "shasum" : "3ea36c5d8818d0d5f8a8a97a6d36b86cdc00cb27"
      },
      "dependencies" : {
        "follow-redirects" : "1.5.10"
      },
      "devDependencies" : {
        "bundlesize" : "^0.17.0",
        "coveralls" : "^3.0.0",
        "es6-promise" : "^4.2.4",
        "grunt" : "^1.0.2",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.1.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^20.1.0",
        "grunt-karma" : "^2.0.0",
        "grunt-mocha-test" : "^0.13.3",
        "grunt-ts" : "^6.0.0-beta.19",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.2.0",
        "karma-coverage" : "^1.1.1",
        "karma-firefox-launcher" : "^1.1.0",
        "karma-jasmine" : "^1.1.1",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.2.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "mocha" : "^5.2.0",
        "sinon" : "^4.5.0",
        "typescript" : "^2.8.1",
        "url-search-params" : "^0.10.0",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test && bundlesize",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
        "fix" : "eslint --fix lib/**/*.js"
      },
      "_npmVersion" : "6.4.1",
      "_npmUser" : {
        "name" : "emilyemorehouse",
        "email" : "emilyemorehouse@gmail.com"
      },
      "_id" : "axios@0.19.2",
      "gitHead" : "2a0ff479f9fb7f09a219f5178ca85a6519562ff1",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "bundlesize" : [ {
        "path" : "./dist/axios.min.js",
        "threshold" : "5kB"
      } ],
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/axios_0.19.2_1579667152945_0.06413260032161183"
      },
      "_nodeVersion" : "10.14.1"
    },
    "0.19.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.19.1",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/axios/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.19.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.19.1.tgz",
        "shasum" : "8a6a04eed23dfe72747e1dd43c604b8f1677b5aa"
      },
      "dependencies" : {
        "follow-redirects" : "1.5.10"
      },
      "devDependencies" : {
        "bundlesize" : "^0.17.0",
        "coveralls" : "^3.0.0",
        "es6-promise" : "^4.2.4",
        "grunt" : "^1.0.2",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.1.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^20.1.0",
        "grunt-karma" : "^2.0.0",
        "grunt-mocha-test" : "^0.13.3",
        "grunt-ts" : "^6.0.0-beta.19",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.2.0",
        "karma-coverage" : "^1.1.1",
        "karma-firefox-launcher" : "^1.1.0",
        "karma-jasmine" : "^1.1.1",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.2.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "mocha" : "^5.2.0",
        "sinon" : "^4.5.0",
        "typescript" : "^2.8.1",
        "url-search-params" : "^0.10.0",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test && bundlesize",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
        "fix" : "eslint --fix lib/**/*.js"
      },
      "_npmVersion" : "6.9.0",
      "_npmUser" : {
        "name" : "emilyemorehouse",
        "email" : "emilyemorehouse@gmail.com"
      },
      "_id" : "axios@0.19.1",
      "gitHead" : "960e1c879892ac6e1c83a798c06b9907e35ad2df",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "bundlesize" : [ {
        "path" : "./dist/axios.min.js",
        "threshold" : "5kB"
      } ],
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/axios_0.19.1_1578417819619_0.7754632329284743"
      },
      "_nodeVersion" : "10.16.3"
    },
    "0.19.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.19.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/axios/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.19.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.19.0.tgz",
        "shasum" : "8e09bff3d9122e133f7b8101c8fbdd00ed3d2ab8"
      },
      "dependencies" : {
        "follow-redirects" : "1.5.10",
        "is-buffer" : "^2.0.2"
      },
      "devDependencies" : {
        "bundlesize" : "^0.17.0",
        "coveralls" : "^3.0.0",
        "es6-promise" : "^4.2.4",
        "grunt" : "^1.0.2",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.1.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^20.1.0",
        "grunt-karma" : "^2.0.0",
        "grunt-mocha-test" : "^0.13.3",
        "grunt-ts" : "^6.0.0-beta.19",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.2.0",
        "karma-coverage" : "^1.1.1",
        "karma-firefox-launcher" : "^1.1.0",
        "karma-jasmine" : "^1.1.1",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.2.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "mocha" : "^5.2.0",
        "sinon" : "^4.5.0",
        "typescript" : "^2.8.1",
        "url-search-params" : "^0.10.0",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test && bundlesize",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
        "fix" : "eslint --fix lib/**/*.js"
      },
      "_npmVersion" : "6.4.1",
      "_npmUser" : {
        "name" : "emilyemorehouse",
        "email" : "emilyemorehouse@gmail.com"
      },
      "_id" : "axios@0.19.0",
      "gitHead" : "8d0b92b2678d96770304dd767cd05a59d37f12cf",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "bundlesize" : [ {
        "path" : "./dist/axios.min.js",
        "threshold" : "5kB"
      } ],
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/axios_0.19.0_1559232796730_0.8176323141298978"
      },
      "_nodeVersion" : "10.14.1"
    },
    "0.18.1" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.18.1",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/axios/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.18.1.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.18.1.tgz",
        "shasum" : "ff3f0de2e7b5d180e757ad98000f1081b87bcea3"
      },
      "dependencies" : {
        "follow-redirects" : "1.5.10",
        "is-buffer" : "^2.0.2"
      },
      "devDependencies" : {
        "bundlesize" : "^0.5.7",
        "coveralls" : "^2.11.9",
        "es6-promise" : "^4.0.5",
        "grunt" : "^1.0.1",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.0.0",
        "grunt-contrib-nodeunit" : "^1.0.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^19.0.0",
        "grunt-karma" : "^2.0.0",
        "grunt-ts" : "^6.0.0-beta.3",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.0.0",
        "karma-coverage" : "^1.0.0",
        "karma-firefox-launcher" : "^1.0.0",
        "karma-jasmine" : "^1.0.2",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.1.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "sinon" : "^1.17.4",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1",
        "url-search-params" : "^0.6.1",
        "typescript" : "^2.0.3"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test && bundlesize",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js"
      },
      "_npmVersion" : "6.4.1",
      "_npmUser" : {
        "name" : "emilyemorehouse",
        "email" : "emilyemorehouse@gmail.com"
      },
      "_id" : "axios@0.18.1",
      "gitHead" : "face0165de613696d10b1fd2a0e2f7b3852fa018",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "bundlesize" : [ {
        "path" : "./dist/axios.min.js",
        "threshold" : "5kB"
      } ],
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/axios_0.18.1_1559349996092_0.11914013949107205"
      },
      "_nodeVersion" : "10.14.1"
    },
    "0.20.0" : {
      "name" : "axios",
      "description" : "Promise based HTTP client for the browser and node.js",
      "version" : "0.20.0",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/axios/axios.git"
      },
      "main" : "index.js",
      "dist" : {
        "tarball" : "https://na.artifactory.swg-devops.com:443/artifactory/api/npm/fxo-cio-ies-npm-virtual/axios/-/axios-0.20.0.tgz?dl=https%3A%2F%2Fregistry.npmjs.org%2Faxios%2F-%2Faxios-0.20.0.tgz",
        "shasum" : "057ba30f04884694993a8cd07fa394cff11c50bd"
      },
      "dependencies" : {
        "follow-redirects" : "^1.10.0"
      },
      "devDependencies" : {
        "bundlesize" : "^0.17.0",
        "coveralls" : "^3.0.0",
        "es6-promise" : "^4.2.4",
        "grunt" : "^1.0.2",
        "grunt-banner" : "^0.6.0",
        "grunt-cli" : "^1.2.0",
        "grunt-contrib-clean" : "^1.1.0",
        "grunt-contrib-watch" : "^1.0.0",
        "grunt-eslint" : "^20.1.0",
        "grunt-karma" : "^2.0.0",
        "grunt-mocha-test" : "^0.13.3",
        "grunt-ts" : "^6.0.0-beta.19",
        "grunt-webpack" : "^1.0.18",
        "istanbul-instrumenter-loader" : "^1.0.0",
        "jasmine-core" : "^2.4.1",
        "karma" : "^1.3.0",
        "karma-chrome-launcher" : "^2.2.0",
        "karma-coverage" : "^1.1.1",
        "karma-firefox-launcher" : "^1.1.0",
        "karma-jasmine" : "^1.1.1",
        "karma-jasmine-ajax" : "^0.1.13",
        "karma-opera-launcher" : "^1.0.0",
        "karma-safari-launcher" : "^1.0.0",
        "karma-sauce-launcher" : "^1.2.0",
        "karma-sinon" : "^1.0.5",
        "karma-sourcemap-loader" : "^0.3.7",
        "karma-webpack" : "^1.7.0",
        "load-grunt-tasks" : "^3.5.2",
        "minimist" : "^1.2.0",
        "mocha" : "^5.2.0",
        "sinon" : "^4.5.0",
        "typescript" : "^2.8.1",
        "url-search-params" : "^0.10.0",
        "webpack" : "^1.13.1",
        "webpack-dev-server" : "^1.14.1"
      },
      "license" : "MIT",
      "directories" : {
      },
      "scripts" : {
        "test" : "grunt test && bundlesize",
        "start" : "node ./sandbox/server.js",
        "build" : "NODE_ENV=production grunt build",
        "preversion" : "npm test",
        "version" : "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        "postversion" : "git push && git push --tags",
        "examples" : "node ./examples/server.js",
        "coveralls" : "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
        "fix" : "eslint --fix lib/**/*.js"
      },
      "_npmVersion" : "6.13.4",
      "_npmUser" : {
        "name" : "emilyemorehouse",
        "email" : "emilyemorehouse@gmail.com"
      },
      "_id" : "axios@0.20.0",
      "gitHead" : "0d8765562401910c1c509f6739a3bc558721e123",
      "typings" : "./index.d.ts",
      "browser" : {
        "./lib/adapters/http.js" : "./lib/adapters/xhr.js"
      },
      "unpkg" : "dist/axios.min.js",
      "bundlesize" : [ {
        "path" : "./dist/axios.min.js",
        "threshold" : "5kB"
      } ],
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/axios_0.20.0_1597979568607_0.029711276345566695"
      },
      "jsdelivr" : "dist/axios.min.js",
      "_nodeVersion" : "12.16.1"
    }
  },
  "readme" : "# axios\n\n[![npm version](https://img.shields.io/npm/v/axios.svg?style=flat-square)](https://www.npmjs.org/package/axios)\n[![CDNJS](https://img.shields.io/cdnjs/v/axios.svg?style=flat-square)](https://cdnjs.com/libraries/axios)\n[![build status](https://img.shields.io/travis/axios/axios/master.svg?style=flat-square)](https://travis-ci.org/axios/axios)\n[![code coverage](https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square)](https://coveralls.io/r/mzabriskie/axios)\n[![install size](https://packagephobia.now.sh/badge?p=axios)](https://packagephobia.now.sh/result?p=axios)\n[![npm downloads](https://img.shields.io/npm/dm/axios.svg?style=flat-square)](http://npm-stat.com/charts.html?package=axios)\n[![gitter chat](https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square)](https://gitter.im/mzabriskie/axios)\n[![code helpers](https://www.codetriage.com/axios/axios/badges/users.svg)](https://www.codetriage.com/axios/axios)\n\nPromise based HTTP client for the browser and node.js\n## Table of Contents\n\n  - [Features](#features)\n  - [Browser Support](#browser-support)\n  - [Installing](#installing)\n  - [Example](#example)\n  - [Axios API](#axios-api)\n  - [Request method aliases](#request-method-aliases)\n  - [Concurrency (Deprecated)](#concurrency-deprecated)\n  - [Creating an instance](#creating-an-instance)\n  - [Instance methods](#instance-methods)\n  - [Request Config](#request-config)\n  - [Response Schema](#response-schema)\n  - [Config Defaults](#config-defaults)\n    - [Global axios defaults](#global-axios-defaults)\n    - [Custom instance defaults](#custom-instance-defaults)\n    - [Config order of precedence](#config-order-of-precedence)\n  - [Interceptors](#interceptors)\n  - [Handling Errors](#handling-errors)\n  - [Cancellation](#cancellation)\n  - [Using application/x-www-form-urlencoded format](#using-applicationx-www-form-urlencoded-format)\n    - [Browser](#browser)\n    - [Node.js](#nodejs)\n      - [Query string](#query-string)\n      - [Form data](#form-data)\n  - [Semver](#semver)\n  - [Promises](#promises)\n  - [TypeScript](#typescript)\n  - [Resources](#resources)\n  - [Credits](#credits)\n  - [License](#license)\n\n## Features\n\n- Make [XMLHttpRequests](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) from the browser\n- Make [http](http://nodejs.org/api/http.html) requests from node.js\n- Supports the [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) API\n- Intercept request and response\n- Transform request and response data\n- Cancel requests\n- Automatic transforms for JSON data\n- Client side support for protecting against [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png) | ![Safari](https://raw.github.com/alrra/browser-logos/master/src/safari/safari_48x48.png) | ![Opera](https://raw.github.com/alrra/browser-logos/master/src/opera/opera_48x48.png) | ![Edge](https://raw.github.com/alrra/browser-logos/master/src/edge/edge_48x48.png) | ![IE](https://raw.github.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png) |\n--- | --- | --- | --- | --- | --- |\nLatest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | 11 ✔ |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing yarn:\n\n```bash\n$ yarn add axios\n```\n\nUsing jsDelivr CDN:\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>\n```\n\nUsing unpkg CDN:\n\n```html\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n```\n\n## Example\n\n### note: CommonJS usage\nIn order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()` use the following approach:\n\n```js\nconst axios = require('axios').default;\n\n// axios.<method> will now provide autocomplete and parameter typings\n```\n\nPerforming a `GET` request\n\n```js\nconst axios = require('axios');\n\n// Make a request for a user with a given ID\naxios.get('/user?ID=12345')\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n  .then(function () {\n    // always executed\n  });\n\n// Optionally the request above could also be done as\naxios.get('/user', {\n    params: {\n      ID: 12345\n    }\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  })\n  .then(function () {\n    // always executed\n  });  \n\n// Want to use async/await? Add the `async` keyword to your outer function/method.\nasync function getUser() {\n  try {\n    const response = await axios.get('/user?ID=12345');\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n```\n\n> **NOTE:** `async/await` is part of ECMAScript 2017 and is not supported in Internet\n> Explorer and older browsers, so use with caution.\n\nPerforming a `POST` request\n\n```js\naxios.post('/user', {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n```\n\nPerforming multiple concurrent requests\n\n```js\nfunction getUserAccount() {\n  return axios.get('/user/12345');\n}\n\nfunction getUserPermissions() {\n  return axios.get('/user/12345/permissions');\n}\n\nPromise.all([getUserAccount(), getUserPermissions()])\n  .then(function (results) {\n    const acct = results[0];\n    const perm = results[1];\n  });\n```\n\n## axios API\n\nRequests can be made by passing the relevant config to `axios`.\n\n##### axios(config)\n\n```js\n// Send a POST request\naxios({\n  method: 'post',\n  url: '/user/12345',\n  data: {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  }\n});\n```\n\n```js\n// GET request for remote image in node.js\naxios({\n  method: 'get',\n  url: 'http://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Send a GET request (default method)\naxios('/user/12345');\n```\n\n### Request method aliases\n\nFor convenience aliases have been provided for all supported request methods.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### NOTE\nWhen using the alias methods `url`, `method`, and `data` properties don't need to be specified in config.\n\n### Concurrency (Deprecated)\nPlease use `Promise.all` to replace the below functions.\n\nHelper functions for dealing with concurrent requests.\n\naxios.all(iterable)\naxios.spread(callback)\n\n### Creating an instance\n\nYou can create a new instance of axios with a custom config.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Instance methods\n\nThe available instance methods are listed below. The specified config will be merged with the instance config.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Request Config\n\nThese are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.\n\n```js\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n\n  // `baseURL` will be prepended to `url` unless `url` is absolute.\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  // to methods of that instance.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `transformRequest` allows changes to the request data before it is sent to the server\n  // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  // FormData or Stream\n  // You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `transformResponse` allows changes to the response data to be made before\n  // it is passed to then/catch\n  transformResponse: [function (data) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `headers` are custom headers to be sent\n  headers: {'X-Requested-With': 'XMLHttpRequest'},\n\n  // `params` are the URL parameters to be sent with the request\n  // Must be a plain object or a URLSearchParams object\n  params: {\n    ID: 12345\n  },\n\n  // `paramsSerializer` is an optional function in charge of serializing `params`\n  // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)\n  paramsSerializer: function (params) {\n    return Qs.stringify(params, {arrayFormat: 'brackets'})\n  },\n\n  // `data` is the data to be sent as the request body\n  // Only applicable for request methods 'PUT', 'POST', 'DELETE , and 'PATCH'\n  // When no `transformRequest` is set, must be of one of the following types:\n  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n  // - Browser only: FormData, File, Blob\n  // - Node only: Stream, Buffer\n  data: {\n    firstName: 'Fred'\n  },\n  \n  // syntax alternative to send data into the body\n  // method post\n  // only the value is sent, not the key\n  data: 'Country=Brasil&City=Belo Horizonte',\n\n  // `timeout` specifies the number of milliseconds before the request times out.\n  // If the request takes longer than `timeout`, the request will be aborted.\n  timeout: 1000, // default is `0` (no timeout)\n\n  // `withCredentials` indicates whether or not cross-site Access-Control requests\n  // should be made using credentials\n  withCredentials: false, // default\n\n  // `adapter` allows custom handling of requests which makes testing easier.\n  // Return a promise and supply a valid response (see lib/adapters/README.md).\n  adapter: function (config) {\n    /* ... */\n  },\n\n  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.\n  // This will set an `Authorization` header, overwriting any existing\n  // `Authorization` custom headers you have set using `headers`.\n  // Please note that only HTTP Basic auth is configurable through this parameter.\n  // For Bearer tokens and such, use `Authorization` custom headers instead.\n  auth: {\n    username: 'janedoe',\n    password: 's00pers3cret'\n  },\n\n  // `responseType` indicates the type of data that the server will respond with\n  // options are: 'arraybuffer', 'document', 'json', 'text', 'stream'\n  //   browser only: 'blob'\n  responseType: 'json', // default\n\n  // `responseEncoding` indicates encoding to use for decoding responses (Node.js only)\n  // Note: Ignored for `responseType` of 'stream' or client-side requests\n  responseEncoding: 'utf8', // default\n\n  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token\n  xsrfCookieName: 'XSRF-TOKEN', // default\n\n  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value\n  xsrfHeaderName: 'X-XSRF-TOKEN', // default\n\n  // `onUploadProgress` allows handling of progress events for uploads\n  // browser only\n  onUploadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `onDownloadProgress` allows handling of progress events for downloads\n  // browser only\n  onDownloadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `maxContentLength` defines the max size of the http response content in bytes allowed in node.js\n  maxContentLength: 2000,\n\n  // `maxBodyLength` (Node only option) defines the max size of the http request content in bytes allowed\n  maxBodyLength: 2000,\n\n  // `validateStatus` defines whether to resolve or reject the promise for a given\n  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\n  // or `undefined`), the promise will be resolved; otherwise, the promise will be\n  // rejected.\n  validateStatus: function (status) {\n    return status >= 200 && status < 300; // default\n  },\n\n  // `maxRedirects` defines the maximum number of redirects to follow in node.js.\n  // If set to 0, no redirects will be followed.\n  maxRedirects: 5, // default\n\n  // `socketPath` defines a UNIX Socket to be used in node.js.\n  // e.g. '/var/run/docker.sock' to send requests to the docker daemon.\n  // Only either `socketPath` or `proxy` can be specified.\n  // If both are specified, `socketPath` is used.\n  socketPath: null, // default\n\n  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http\n  // and https requests, respectively, in node.js. This allows options to be added like\n  // `keepAlive` that are not enabled by default.\n  httpAgent: new http.Agent({ keepAlive: true }),\n  httpsAgent: new https.Agent({ keepAlive: true }),\n\n  // `proxy` defines the hostname and port of the proxy server.\n  // You can also define your proxy using the conventional `http_proxy` and\n  // `https_proxy` environment variables. If you are using environment variables\n  // for your proxy configuration, you can also define a `no_proxy` environment\n  // variable as a comma-separated list of domains that should not be proxied.\n  // Use `false` to disable proxies, ignoring environment variables.\n  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and\n  // supplies credentials.\n  // This will set an `Proxy-Authorization` header, overwriting any existing\n  // `Proxy-Authorization` custom headers you have set using `headers`.\n  proxy: {\n    host: '127.0.0.1',\n    port: 9000,\n    auth: {\n      username: 'mikeymike',\n      password: 'rapunz3l'\n    }\n  },\n\n  // `cancelToken` specifies a cancel token that can be used to cancel the request\n  // (see Cancellation section below for details)\n  cancelToken: new CancelToken(function (cancel) {\n  }),\n\n  // `decompress` indicates whether or not the response body should be decompressed \n  // automatically. If set to `true` will also remove the 'content-encoding' header \n  // from the responses objects of all decompressed responses\n  // - Node only (XHR cannot turn off decompression)\n  decompress: true // default\n\n}\n```\n\n## Response Schema\n\nThe response for a request contains the following information.\n\n```js\n{\n  // `data` is the response that was provided by the server\n  data: {},\n\n  // `status` is the HTTP status code from the server response\n  status: 200,\n\n  // `statusText` is the HTTP status message from the server response\n  statusText: 'OK',\n\n  // `headers` the HTTP headers that the server responded with\n  // All header names are lower cased and can be accessed using the bracket notation.\n  // Example: `response.headers['content-type']`\n  headers: {},\n\n  // `config` is the config that was provided to `axios` for the request\n  config: {},\n\n  // `request` is the request that generated this response\n  // It is the last ClientRequest instance in node.js (in redirects)\n  // and an XMLHttpRequest instance in the browser\n  request: {}\n}\n```\n\nWhen using `then`, you will receive the response as follows:\n\n```js\naxios.get('/user/12345')\n  .then(function (response) {\n    console.log(response.data);\n    console.log(response.status);\n    console.log(response.statusText);\n    console.log(response.headers);\n    console.log(response.config);\n  });\n```\n\nWhen using `catch`, or passing a [rejection callback](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then) as second parameter of `then`, the response will be available through the `error` object as explained in the [Handling Errors](#handling-errors) section.\n\n## Config Defaults\n\nYou can specify config defaults that will be applied to every request.\n\n### Global axios defaults\n\n```js\naxios.defaults.baseURL = 'https://api.example.com';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n```\n\n### Custom instance defaults\n\n```js\n// Set config defaults when creating the instance\nconst instance = axios.create({\n  baseURL: 'https://api.example.com'\n});\n\n// Alter defaults after instance has been created\ninstance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n```\n\n### Config order of precedence\n\nConfig will be merged with an order of precedence. The order is library defaults found in [lib/defaults.js](https://github.com/axios/axios/blob/master/lib/defaults.js#L28), then `defaults` property of the instance, and finally `config` argument for the request. The latter will take precedence over the former. Here's an example.\n\n```js\n// Create an instance using the config defaults provided by the library\n// At this point the timeout config value is `0` as is the default for the library\nconst instance = axios.create();\n\n// Override timeout default for the library\n// Now all requests using this instance will wait 2.5 seconds before timing out\ninstance.defaults.timeout = 2500;\n\n// Override timeout for this request as it's known to take a long time\ninstance.get('/longRequest', {\n  timeout: 5000\n});\n```\n\n## Interceptors\n\nYou can intercept requests or responses before they are handled by `then` or `catch`.\n\n```js\n// Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  }, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  });\n```\n\nIf you need to remove an interceptor later you can.\n\n```js\nconst myInterceptor = axios.interceptors.request.use(function () {/*...*/});\naxios.interceptors.request.eject(myInterceptor);\n```\n\nYou can add interceptors to a custom instance of axios.\n\n```js\nconst instance = axios.create();\ninstance.interceptors.request.use(function () {/*...*/});\n```\n\n## Handling Errors\n\n```js\naxios.get('/user/12345')\n  .catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n```\n\nUsing the `validateStatus` config option, you can define HTTP code(s) that should throw an error.\n\n```js\naxios.get('/user/12345', {\n  validateStatus: function (status) {\n    return status < 500; // Resolve only if the status code is less than 500\n  }\n})\n```\n\nUsing `toJSON` you get an object with more information about the HTTP error.\n\n```js\naxios.get('/user/12345')\n  .catch(function (error) {\n    console.log(error.toJSON());\n  });\n```\n\n## Cancellation\n\nYou can cancel a request using a *cancel token*.\n\n> The axios cancel token API is based on the withdrawn [cancelable promises proposal](https://github.com/tc39/proposal-cancelable-promises).\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\naxios.get('/user/12345', {\n  cancelToken: source.token\n}).catch(function (thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('Request canceled', thrown.message);\n  } else {\n    // handle error\n  }\n});\n\naxios.post('/user/12345', {\n  name: 'new name'\n}, {\n  cancelToken: source.token\n})\n\n// cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user.');\n```\n\nYou can also create a cancel token by passing an executor function to the `CancelToken` constructor:\n\n```js\nconst CancelToken = axios.CancelToken;\nlet cancel;\n\naxios.get('/user/12345', {\n  cancelToken: new CancelToken(function executor(c) {\n    // An executor function receives a cancel function as a parameter\n    cancel = c;\n  })\n});\n\n// cancel the request\ncancel();\n```\n\n> Note: you can cancel several requests with the same cancel token.\n\n## Using application/x-www-form-urlencoded format\n\nBy default, axios serializes JavaScript objects to `JSON`. To send data in the `application/x-www-form-urlencoded` format instead, you can use one of the following options.\n\n### Browser\n\nIn a browser, you can use the [`URLSearchParams`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams) API as follows:\n\n```js\nconst params = new URLSearchParams();\nparams.append('param1', 'value1');\nparams.append('param2', 'value2');\naxios.post('/foo', params);\n```\n\n> Note that `URLSearchParams` is not supported by all browsers (see [caniuse.com](http://www.caniuse.com/#feat=urlsearchparams)), but there is a [polyfill](https://github.com/WebReflection/url-search-params) available (make sure to polyfill the global environment).\n\nAlternatively, you can encode data using the [`qs`](https://github.com/ljharb/qs) library:\n\n```js\nconst qs = require('qs');\naxios.post('/foo', qs.stringify({ 'bar': 123 }));\n```\n\nOr in another way (ES6),\n\n```js\nimport qs from 'qs';\nconst data = { 'bar': 123 };\nconst options = {\n  method: 'POST',\n  headers: { 'content-type': 'application/x-www-form-urlencoded' },\n  data: qs.stringify(data),\n  url,\n};\naxios(options);\n```\n\n### Node.js\n\n#### Query string\n\nIn node.js, you can use the [`querystring`](https://nodejs.org/api/querystring.html) module as follows:\n\n```js\nconst querystring = require('querystring');\naxios.post('http://something.com/', querystring.stringify({ foo: 'bar' }));\n```\n\nor ['URLSearchParams'](https://nodejs.org/api/url.html#url_class_urlsearchparams) from ['url module'](https://nodejs.org/api/url.html) as follows:\n\n```js\nconst url = require('url');\nconst params = new url.URLSearchParams({ foo: 'bar' });\naxios.post('http://something.com/', params.toString());\n```\n\nYou can also use the [`qs`](https://github.com/ljharb/qs) library.\n\n###### NOTE\nThe `qs` library is preferable if you need to stringify nested objects, as the `querystring` method has known issues with that use case (https://github.com/nodejs/node-v0.x-archive/issues/1665).\n\n#### Form data\n\nIn node.js, you can use the [`form-data`](https://github.com/form-data/form-data) library as follows:\n\n```js\nconst FormData = require('form-data');\n \nconst form = new FormData();\nform.append('my_field', 'my value');\nform.append('my_buffer', new Buffer(10));\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'));\n\naxios.post('https://example.com', form, { headers: form.getHeaders() })\n```\n\nAlternatively, use an interceptor:\n\n```js\naxios.interceptors.request.use(config => {\n  if (config.data instanceof FormData) {\n    Object.assign(config.headers, config.data.getHeaders());\n  }\n  return config;\n});\n```\n\n## Semver\n\nUntil axios reaches a `1.0` release, breaking changes will be released with a new minor version. For example `0.5.1`, and `0.5.4` will have the same API, but `0.6.0` will have breaking changes.\n\n## Promises\n\naxios depends on a native ES6 Promise implementation to be [supported](http://caniuse.com/promises).\nIf your environment doesn't support ES6 Promises, you can [polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\naxios includes [TypeScript](http://typescriptlang.org) definitions.\n```typescript\nimport axios from 'axios';\naxios.get('/user?ID=12345');\n```\n\n## Resources\n\n* [Changelog](https://github.com/axios/axios/blob/master/CHANGELOG.md)\n* [Upgrade Guide](https://github.com/axios/axios/blob/master/UPGRADE_GUIDE.md)\n* [Ecosystem](https://github.com/axios/axios/blob/master/ECOSYSTEM.md)\n* [Contributing Guide](https://github.com/axios/axios/blob/master/CONTRIBUTING.md)\n* [Code of Conduct](https://github.com/axios/axios/blob/master/CODE_OF_CONDUCT.md)\n\n## Credits\n\naxios is heavily inspired by the [$http service](https://docs.angularjs.org/api/ng/service/$http) provided in [Angular](https://angularjs.org/). Ultimately axios is an effort to provide a standalone `$http`-like service for use outside of Angular.\n\n## License\n\n[MIT](LICENSE)\n",
  "time" : {
    "0.4.2" : "2014-12-11T07:14:52.563Z",
    "0.5.1" : "2015-03-10T20:47:18.932Z",
    "0.6.0" : "2015-09-21T20:20:20.241Z",
    "0.5.2" : "2015-03-13T23:14:22.809Z",
    "0.7.0" : "2015-09-29T06:36:55.850Z",
    "0.2.2" : "2014-09-15T03:30:45.994Z",
    "0.3.1" : "2014-09-17T00:31:29.538Z",
    "0.4.0" : "2014-10-05T23:55:03.069Z",
    "0.20.0-0" : "2020-07-15T16:07:30.516Z",
    "0.4.1" : "2014-10-15T18:19:42.549Z",
    "0.5.0" : "2015-01-23T10:15:47.657Z",
    "0.9.1" : "2016-01-24T22:19:01.689Z",
    "0.5.3" : "2015-04-08T03:01:17.936Z",
    "0.8.0" : "2015-12-11T19:09:50.663Z",
    "0.5.4" : "2015-04-08T18:49:41.745Z",
    "0.8.1" : "2015-12-15T03:44:16.229Z",
    "0.9.0" : "2016-01-18T18:19:24.356Z",
    "0.2.0" : "2014-09-12T20:06:33.167Z",
    "0.2.1" : "2014-09-12T22:57:28.872Z",
    "0.3.0" : "2014-09-16T18:20:18.668Z",
    "0.1.0" : "2014-08-29T23:08:36.810Z",
    "0.10.0" : "2016-04-21T04:52:22.553Z",
    "modified" : "2020-09-22T09:06:29.315Z",
    "0.15.3" : "2016-11-27T21:59:11.250Z",
    "0.16.2" : "2017-06-03T19:29:23.765Z",
    "0.17.1" : "2017-11-11T23:24:40.635Z",
    "0.18.0" : "2018-02-19T23:28:54.151Z",
    "0.15.2" : "2016-10-18T01:33:20.989Z",
    "0.16.1" : "2017-04-08T18:51:59.217Z",
    "0.17.0" : "2017-10-21T18:01:30.232Z",
    "0.15.1" : "2016-10-15T06:39:23.761Z",
    "0.16.0" : "2017-04-01T02:31:09.040Z",
    "0.19.0-beta.1" : "2018-08-09T18:44:25.247Z",
    "0.15.0" : "2016-10-11T04:40:41.633Z",
    "0.13.1" : "2016-07-16T17:13:24.859Z",
    "0.14.0" : "2016-08-27T18:30:22.182Z",
    "0.13.0" : "2016-07-13T19:42:43.558Z",
    "created" : "2014-08-29T23:08:36.810Z",
    "0.11.1" : "2016-05-17T15:59:30.342Z",
    "0.12.0" : "2016-06-01T05:22:58.397Z",
    "0.11.0" : "2016-04-27T04:19:52.831Z",
    "0.19.2" : "2020-01-22T04:25:53.354Z",
    "0.19.1" : "2020-01-07T17:23:39.782Z",
    "0.19.0" : "2019-05-30T16:13:16.930Z",
    "0.18.1" : "2019-06-01T00:46:36.277Z",
    "0.20.0" : "2020-08-21T03:12:48.792Z"
  },
  "repository" : {
    "type" : "git",
    "url" : "git+https://github.com/axios/axios.git"
  },
  "users" : {
    "izzy" : true,
    "jacob-beltran" : true,
    "mat2ja" : true,
    "tangweikun" : true,
    "dansh" : true,
    "lifecube" : true,
    "eleadertech" : true,
    "mrodixon" : true,
    "bcawrse" : true,
    "456wyc" : true,
    "sappharx" : true,
    "avivharuzi" : true,
    "alaska" : true,
    "oceanic" : true,
    "stone_breaker" : true,
    "techmuch" : true,
    "chrisbroome" : true,
    "shanewholloway" : true,
    "leapm" : true,
    "jaxcode" : true,
    "mark24code" : true,
    "psychollama" : true,
    "kerwyn" : true,
    "rocket0191" : true,
    "qddegtya" : true,
    "wenxiayili" : true,
    "onursimsek" : true,
    "demerfo" : true,
    "jeppesigaard" : true,
    "fluffycloud.project" : true,
    "tdreitz" : true,
    "technolojay" : true,
    "fengmiaosen" : true,
    "alexj01" : true,
    "heartnett" : true,
    "snarky" : true,
    "grin_zhou" : true,
    "rawphp" : true,
    "rlafferty" : true,
    "tenpenny" : true,
    "in-the-box" : true,
    "karzanosman984" : true,
    "ehrig" : true,
    "tomchao" : true,
    "gamersdelight" : true,
    "jens1101" : true,
    "stone-jin" : true,
    "ecelis" : true,
    "hendrik.bunnick" : true,
    "sergeymakoveev" : true,
    "monjer" : true,
    "robmazur" : true,
    "benigro" : true,
    "bapinney" : true,
    "sharper" : true,
    "morrelinko" : true,
    "blakehall" : true,
    "zhen" : true,
    "edosrecki" : true,
    "smallinfinity" : true,
    "monolithed" : true,
    "littleblack" : true,
    "cslasher" : true,
    "guolintao" : true,
    "boton" : true,
    "arttse" : true,
    "tunghua" : true,
    "greganswer" : true,
    "justforuse" : true,
    "jorycn" : true,
    "tyrionbb" : true,
    "chrisaguilar" : true,
    "nuer" : true,
    "tomasmax" : true,
    "hualei" : true,
    "krabello" : true,
    "cameronnokes" : true,
    "cubiio" : true,
    "isenricho" : true,
    "vparaskevas" : true,
    "strae" : true,
    "omkar.sheral.1989" : true,
    "alexey-mish" : true,
    "andysw" : true,
    "bigglesatlarge" : true,
    "kalzad" : true,
    "rochejul" : true,
    "ltiveron" : true,
    "marcelohmdias" : true,
    "yash3492" : true,
    "samirdamle" : true,
    "panlw" : true,
    "5tormtrooper" : true,
    "d-band" : true,
    "arcticicestudio" : true,
    "totopsy" : true,
    "nwservices" : true,
    "ashishkrgupta" : true,
    "sethbergman" : true,
    "emj365" : true,
    "evelikov92" : true,
    "david2000" : true,
    "jwv" : true,
    "isudaji" : true,
    "tonstwo" : true,
    "akwa770" : true,
    "ldq-first" : true,
    "midascreed" : true,
    "blastz" : true,
    "demian_dark" : true,
    "hkb06542" : true,
    "pr-anoop" : true,
    "maciej.litwiniec" : true,
    "santospatrick" : true,
    "lassevolkmann" : true,
    "fengwuqing40" : true,
    "ashco" : true,
    "aaronchan" : true,
    "draganhr" : true,
    "abhisekp" : true,
    "henriesteves" : true,
    "rci_michael" : true,
    "guiyuzhao" : true,
    "ayoungh" : true,
    "warcrydoggie" : true,
    "juananto11" : true,
    "rparris" : true,
    "softdev-zeus" : true,
    "krishna_kandula" : true,
    "musikele" : true,
    "sammyteahan" : true,
    "nicknaso" : true,
    "jahvah" : true,
    "razr9" : true,
    "zachkrall" : true,
    "lbragaglia" : true,
    "leonel-ai" : true,
    "ryaned" : true,
    "travm" : true,
    "arcanedev" : true,
    "buru1020" : true,
    "keybouh" : true,
    "dennisbruner" : true,
    "ice.tang" : true,
    "galenandrew" : true,
    "raffaele" : true,
    "kevinbolton" : true,
    "teneff" : true,
    "meshal" : true,
    "zxgameboy" : true,
    "drac" : true,
    "jillmolloy" : true,
    "pozhull" : true,
    "mwheeler" : true,
    "mjasso" : true,
    "nickeltobias" : true,
    "atulmy" : true,
    "stets" : true,
    "dnero" : true,
    "lestad" : true,
    "yayayahei" : true,
    "leor" : true,
    "cheapsteak" : true,
    "buzuli" : true,
    "kasiriveni" : true,
    "madarche" : true,
    "rossdavis" : true,
    "majgis" : true,
    "akinhwan" : true,
    "milan322" : true,
    "71emj1" : true,
    "soulchainer" : true,
    "matiasherranz" : true,
    "hummatli" : true,
    "jsw528" : true,
    "hpeden" : true,
    "leonardorb" : true,
    "chrisakakay" : true,
    "ultimatik" : true,
    "curedfish" : true,
    "geekish" : true,
    "joe.li" : true,
    "gunaerode" : true,
    "mikroacse" : true,
    "gux" : true,
    "yongchen" : true,
    "wearevilla" : true,
    "ta2edchimp" : true,
    "emersonmx" : true,
    "rmanalan" : true,
    "colkito" : true,
    "cooclsee" : true,
    "mystaticself" : true,
    "jedaviata" : true,
    "bobxuyang" : true,
    "qt911025" : true,
    "kaerimichi" : true,
    "johnend" : true,
    "adeamos83" : true,
    "philipjc" : true,
    "rkopylkov" : true,
    "lemulot" : true,
    "fcmxtzsca" : true,
    "leizongmin" : true,
    "borasta" : true,
    "donfear" : true,
    "pablopap" : true,
    "dennila2" : true,
    "cfleschhut" : true,
    "codebruder" : true,
    "leonzhao" : true,
    "mahume" : true,
    "dongxu" : true,
    "pixel67" : true,
    "adrian.arroyocalle" : true,
    "myorkgitis" : true,
    "zalithka" : true,
    "xiaochao" : true,
    "he313572052" : true,
    "jerrywu12" : true,
    "gggauravgandhi" : true,
    "paulkolesnyk" : true,
    "dh19911021" : true,
    "maninacan" : true,
    "licj316" : true,
    "liupengbo" : true,
    "krugarmatt" : true,
    "karimdeif" : true,
    "chirag8642" : true,
    "matiasmarani" : true,
    "taita" : true,
    "ab.moon" : true,
    "goldencrow" : true,
    "xueboren" : true,
    "3creatives" : true,
    "phpjungle" : true,
    "scott.m.sarsfield" : true,
    "winnie" : true,
    "scytalezero" : true,
    "growdigital" : true,
    "liubiqu" : true,
    "gokulnk" : true,
    "reyronald" : true,
    "pddivine" : true,
    "lin-wish" : true,
    "yangzw" : true,
    "chrisco" : true,
    "lucius.tsai" : true,
    "drew.brokke" : true,
    "alphatr" : true,
    "charlietango592" : true,
    "herrkessler" : true,
    "housser" : true,
    "shoonia" : true,
    "datta3575" : true,
    "superchenney" : true,
    "kaashin" : true,
    "jaredwilli" : true,
    "artem.tkachuck" : true,
    "preco21" : true,
    "vfmneto" : true,
    "maxblock" : true,
    "nabheetmadan" : true,
    "leomdg" : true,
    "ux_web" : true,
    "swirlyleopard" : true,
    "tianm" : true,
    "joseph320" : true,
    "dmitryscaletta" : true,
    "stephenhuh" : true,
    "jeffreysbrother" : true,
    "danielkalen" : true,
    "gpuente" : true,
    "andrewlam" : true,
    "alanson" : true,
    "chrisanderss0n" : true,
    "rrentfro" : true,
    "rebolon" : true,
    "nickleefly" : true,
    "bigbird92" : true,
    "nicolaslevy" : true,
    "azertypow" : true,
    "shreyawhiz" : true,
    "fabiociconi" : true,
    "webnicola" : true,
    "jussipekka" : true,
    "aliemre" : true,
    "post72" : true,
    "micaelsouza" : true,
    "jian263994241" : true,
    "tangchr" : true,
    "chiaychang" : true,
    "nmccready" : true,
    "yichan" : true,
    "miloc" : true,
    "aven03" : true,
    "terenceodonoghue" : true,
    "gracelee" : true,
    "parkerproject" : true,
    "codevelopit" : true,
    "komarovsergey" : true,
    "hitalos" : true,
    "edision" : true,
    "jkramp" : true,
    "stephensauceda" : true,
    "zorak" : true,
    "thevikingcoder" : true,
    "n8finch" : true,
    "dongguangming" : true,
    "epan" : true,
    "jmiziolek" : true,
    "lk-hu" : true,
    "aisin" : true,
    "zvikyb" : true,
    "tullece" : true,
    "tiggem1993" : true,
    "daniel-lewis-bsc-hons" : true,
    "sebbaum" : true,
    "bradleybossard" : true,
    "desmondddd" : true,
    "frank1303" : true,
    "fakefarm" : true,
    "jota" : true,
    "arnold-almeida" : true,
    "ealen" : true,
    "ritsu" : true,
    "herrbischoff" : true,
    "gurpreetbirdi" : true,
    "cooboor" : true,
    "bluejeansandrain" : true,
    "t3zfu" : true,
    "isayme" : true,
    "salvationz" : true,
    "mobeicaoyuan" : true,
    "ahillier" : true,
    "zachbergh" : true,
    "aukhan288" : true,
    "hiztmine" : true,
    "cognivator" : true,
    "techfe" : true,
    "wujianfu" : true,
    "recursion_excursion" : true,
    "augiethornton" : true,
    "ablbol" : true,
    "kaufmo" : true,
    "ascodejoy" : true,
    "supergreen" : true,
    "maxwelldu" : true,
    "iceriver2" : true,
    "ayad" : true,
    "santhoshbabu" : true,
    "snowdream" : true,
    "abuelwafa" : true,
    "shangri_la" : true,
    "womjoy" : true,
    "phris" : true,
    "egobrightan" : true,
    "thiagowittmann" : true,
    "onlyutkarsh" : true,
    "learncode" : true,
    "sternelee" : true,
    "ddffx" : true,
    "usingthesystem" : true,
    "hexagon6" : true,
    "jakedemonaco" : true,
    "285858315" : true,
    "clivend" : true,
    "shawndsouza" : true,
    "lsxlsxxslxsl" : true,
    "jameschen" : true,
    "temandoandrew" : true,
    "dzr" : true,
    "programmer.severson" : true,
    "taseenb" : true,
    "jireve999" : true,
    "renz0" : true,
    "maurogestoso" : true,
    "mv92" : true,
    "ioztelli" : true,
    "yologith" : true,
    "sunnylife" : true,
    "stanlindsey" : true,
    "lukaswilkeer" : true,
    "derrickbeining" : true,
    "feibenren" : true,
    "emoket" : true,
    "abhijitkalta" : true,
    "bzluyang" : true,
    "robsoer" : true,
    "yanlaichang" : true,
    "danmartinez" : true,
    "satanbaby" : true,
    "mitica" : true,
    "samar" : true,
    "eswat2" : true,
    "kiinlam" : true,
    "cnwhy" : true,
    "arturparkhisenko" : true,
    "laomu" : true,
    "jackishere" : true,
    "kevin-foster" : true,
    "luxinlei" : true,
    "rajivmehtajs" : true,
    "howardlhw" : true,
    "fabian.moron.zirfas" : true,
    "josep" : true,
    "shiva127" : true,
    "dryliketoast" : true,
    "geofftech" : true,
    "kkho595" : true,
    "rgskpuri" : true,
    "mutantspew" : true,
    "yl2014" : true,
    "calin.buzatu" : true,
    "christopheredrian" : true,
    "aweibell" : true,
    "puneets1994" : true,
    "lelivero" : true,
    "womcauliff" : true,
    "matthewh" : true,
    "arun.vijayarengan" : true,
    "mrmartineau" : true,
    "blakeredwolf" : true,
    "jeseab" : true,
    "jasonwang1888" : true,
    "mehtarohan" : true,
    "shuoshubao" : true,
    "chinawolf_wyp" : true,
    "hugojosefson" : true,
    "nulpatrol" : true,
    "mhaidarh" : true,
    "pgabronis" : true,
    "corintho" : true,
    "npmxkl" : true,
    "waitstone" : true,
    "nickiesiva" : true,
    "program247365" : true,
    "flowers" : true,
    "kodekracker" : true,
    "mtusta" : true,
    "vidhill" : true,
    "scharfie" : true,
    "dahdoul" : true,
    "zhenguo.zhao" : true,
    "pahud" : true,
    "liunian" : true,
    "asm2hex" : true,
    "hyteer" : true,
    "santi8ago8" : true,
    "princetoad" : true,
    "jonabasque" : true,
    "xuwenzhi" : true,
    "codingkapoor" : true,
    "alexcoady" : true,
    "codeinfront" : true,
    "moxiong" : true,
    "vbv" : true,
    "cocorax" : true,
    "yinyongcom666" : true,
    "mariusc23" : true,
    "kikna" : true,
    "olegkorol" : true,
    "josemarjobs" : true,
    "nbur4556" : true,
    "mirreal" : true,
    "yonisetiawan" : true,
    "oussoulessou" : true,
    "chenyingxuan1996" : true,
    "mdedirudianto" : true,
    "nguyenvanhoang26041994" : true,
    "ivan.marquez" : true,
    "francis.santos" : true,
    "allendale" : true,
    "larrychen" : true,
    "danielpavelic" : true,
    "wayn" : true,
    "elussich" : true,
    "nilaeus" : true,
    "gurunate" : true,
    "livarion" : true,
    "huangkerui" : true,
    "bianlongting" : true,
    "zeroth007" : true,
    "p6r" : true,
    "dougtq" : true,
    "rokeyzki" : true,
    "marcker" : true,
    "jotadeveloper" : true,
    "interfacers" : true,
    "christopherkade" : true,
    "ezodude" : true,
    "huangshijuan" : true,
    "tin-lek" : true,
    "jamesbedont" : true,
    "foooooops" : true,
    "jorgemfernandes" : true,
    "baschte" : true,
    "nfrigus" : true,
    "l3au" : true,
    "hanyi1616" : true,
    "nikovacevic" : true,
    "kimmohintikka" : true,
    "tsxuehu" : true,
    "kparkov" : true,
    "antoniordo" : true,
    "javafun" : true,
    "shakakira" : true,
    "pbro" : true,
    "wuxiaword" : true,
    "genovo" : true,
    "rakesh-peela" : true,
    "losymear" : true,
    "sdgcwoods" : true,
    "mmatto" : true,
    "kaycee" : true,
    "maximilianschmitt" : true,
    "markormark" : true,
    "krambuhl" : true,
    "iotale" : true,
    "tylercovington" : true,
    "malloryerik" : true,
    "kiknag" : true,
    "pinkkis" : true,
    "nelix" : true,
    "lorenazohar" : true,
    "hanhq" : true,
    "guidoschmidt" : true,
    "yong_a" : true,
    "junjiansyu" : true,
    "giordanocardillo" : true,
    "abdul" : true,
    "maddas" : true,
    "wouter_vdb" : true,
    "escapeimagery" : true,
    "gihankarunarathne" : true,
    "gschleic" : true,
    "errol" : true,
    "eduarte78" : true,
    "oskargicast" : true,
    "zebram" : true,
    "nox.xou" : true,
    "jits" : true,
    "ziehlke" : true,
    "antixrist" : true,
    "icodeforcookies" : true,
    "madeo" : true,
    "clementoh" : true,
    "graubnla" : true,
    "rudchyk" : true,
    "owillo" : true,
    "reco_luan" : true,
    "taoqianbao" : true,
    "usex" : true,
    "kbakba" : true,
    "naveedn" : true,
    "jlwinkler" : true,
    "sermir" : true,
    "13lank.null" : true,
    "totemat" : true,
    "tickner" : true,
    "albertico88" : true,
    "ivop" : true
  },
  "readmeFilename" : "README.md",
  "license" : "MIT"
}