{"version":3,"sources":["Images/runninglady.png","Components/Nav/NavBar.js","Components/Footer/Footer.js","Sections/About/About.js","Sections/Pricing/Pricing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","Navbar","bg","variant","fixed","Brand","href","Nav","className","Link","Footer","Fragment","Form","id","Group","as","Row","Col","sm","Control","placeholder","Button","AboutV1","alt","src","runningLady","PricingV1","Card","Header","Body","Title","Text","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.237f571d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/runninglady.6e3d411c.png\";","import React from \"react\";\n\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nexport default function NavBar() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n      <Navbar.Brand href=\"#home\">Kennedy Fitness</Navbar.Brand>\n      <Nav className=\"ml-auto\">\n        <Nav.Link href=\"#about\">About</Nav.Link>\n        <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n        <Nav.Link href=\"#contact\">Contact</Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n}\n","import React from \"react\";\nimport { Form, Col, Row, Button } from \"react-bootstrap\";\nimport \"./Style.css\";\nexport default function Footer() {\n  return (\n    <React.Fragment>\n      <div className=\"footerContainer\">\n        <Form id=\"formContainer\">\n          <Form.Group as={Row}>\n            <Col sm=\"12\" id=\"footerFormMessageContainer\">\n              <p>\n                Submit your email to get the fitness plans you see here and\n                future updates.\n              </p>\n            </Col>\n            <Col sm=\"12\" id=\"formEmailContainer\">\n              <Form.Control\n                id=\"footerEmail\"\n                placeholder=\"youremail@gmail.com\"\n              />\n              <Button variant=\"secondary\" id=\"footerBtn\">\n                Git Fit\n              </Button>\n            </Col>\n            <Col sm=\"12\" id=\"iconRow\">\n              <i className=\"footerIcon footerIconBg fab fa-instagram\"></i>\n              <i className=\"footerIcon fab fa-youtube\"></i>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n      {/* <Navbar bg=\"dark\" variant=\"dark\" sticky=\"bottom\">\n        <Nav className=\"ml-auto\">\n          <Nav.Link href=\"#about\">About</Nav.Link>\n          <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n          <Nav.Link href=\"#contact\">Contact</Nav.Link>\n        </Nav>\n      </Navbar> */}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport \"./Style.css\";\n\nimport { Button } from \"react-bootstrap\";\n\n//images\nimport runningLady from \"../../Images/runninglady.png\";\n\nexport function AboutV1() {\n  return (\n    <div className=\"container-fluid\" id=\"mainContainer\">\n      <div className=\"row\">\n        <div className=\"col-md-7\">\n          <div>\n            <img alt=\"headerImage\" src={runningLady} id=\"aboutImage\" />\n          </div>\n        </div>\n        <div className=\"col-md-5\">\n          <div id=\"abouMessageContainer\">\n            <div id=\"abouMessageHeaderContainer\">\n              <p id=\"abouMessageHeader\">Kennedy Fitness</p>\n            </div>\n\n            <div id=\"abouMessageParagraphContainer\">\n              <p id=\"abouMessageParagraph\">\n                Physical fitness is a state of health and well-being and, more\n                specifically, the ability to perform aspects of sports,\n                occupations and daily activities. Physical fitness is generally\n                achieved through proper nutrition, moderate-vigorous physical\n                exercise, and sufficient rest.\n              </p>\n            </div>\n            <div id=\"abouMessageBtnContainer\">\n              <Button variant=\"warning\">Git Fit</Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Style.css\";\n\nimport { Card, Button } from \"react-bootstrap\";\n\nexport function PricingV1() {\n  return (\n    <div className=\"container\">\n      <div className=\"cardRowR\">\n        <Card className=\"card\">\n          <Card.Header>Simple Shredding Package</Card.Header>\n          <Card.Body>\n            <Card.Title>{\"light\"} This is the gist of the working </Card.Title>\n            <Card.Text>\n              here is some more detail\n              <br />\n              Some quick example text to build on the card title and make up the\n              bulk of the card's content.\n            </Card.Text>\n            <div className=\"cardBtnContainer\">\n              <p className=\"cardPrice\">$100 - </p>\n              <Button variant=\"warning\">Get Started</Button>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n      <div className=\"cardRowL\">\n        <Card className=\"card\">\n          <Card.Header>Header</Card.Header>\n          <Card.Body>\n            <Card.Title>{\"light\"} Card Title </Card.Title>\n            <Card.Text>\n              Some quick example text to build on the card title and make up the\n              bulk of the card's content.\n            </Card.Text>\n            <div className=\"cardUL\">\n              <ul>\n                <li>some work</li>\n                <li>another workout you could do</li>\n                <li>Hey look one more</li>\n              </ul>\n            </div>\n            <div className=\"cardBtnContainer\">\n              <p className=\"cardPrice\">$200 - </p>\n              <Button variant=\"warning\">Get Started</Button>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n      <div className=\"cardRowR\">\n        <Card className=\"card\">\n          <Card.Header>Header</Card.Header>\n          <Card.Body>\n            <Card.Title>{\"light\"} Card Title </Card.Title>\n            <Card.Text>\n              Some quick example text to build on the card title and make up the\n              bulk of the card's content.\n            </Card.Text>\n            <div className=\"cardBtnContainer\">\n              <p className=\"cardPrice\">$300 - </p>\n              <Button variant=\"warning\">Get Started</Button>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n      <div className=\"cardRowL\">\n        <Card className=\"card\">\n          <Card.Header variant=\"warning\">Header</Card.Header>\n          <Card.Body>\n            <Card.Title>{\"light\"} Card Title </Card.Title>\n            <Card.Text>\n              Some quick example text to build on the card title and make up the\n              bulk of the card's content.\n            </Card.Text>\n            <div className=\"cardUL\">\n              <ul>\n                <li>some work</li>\n                <li>another workout you could do</li>\n                <li>Hey look one more</li>\n              </ul>\n            </div>\n            <div className=\"cardBtnContainer\">\n              <p className=\"cardPrice\">$400 - </p>\n              <Button variant=\"warning\">Get Started</Button>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//comps\nimport NavBar from \"./Components/Nav/NavBar\";\nimport Footer from \"./Components/Footer/Footer\";\n\n//section\nimport { AboutV1 } from \"./Sections/About/About\";\nimport { PricingV1 } from \"./Sections/Pricing/Pricing\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar></NavBar>\n      <AboutV1></AboutV1>\n      <PricingV1></PricingV1>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}