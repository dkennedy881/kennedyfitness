{"version":3,"sources":["Images/runninglady.png","Components/Nav/NavBar.js","Components/Footer/Footer.js","Pages/Scheduling/SchedulingForm.js","Pages/Scheduling/Scheduling.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","Navbar","bg","variant","fixed","Nav","className","style","width","Link","href","Footer","Fragment","id","Form","Group","as","Row","Col","sm","SchedulingForm","useState","firstName","setFirstName","lastName","setlastName","email","setEmail","sessionType","setSessionType","isGroup","setIsGroup","groupCount","setGroupCount","weekly","setIsWeekly","sessionPerWeek","setSessionPerWeek","controlId","Label","Control","type","value","onChange","e","target","selected","disabled","SessionTypeSwitch","IndividualGroupSwitch","SessionsPerWeek","key","WeeklySessionSwitch","Scheduling","props","state","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4a238c72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/runninglady.6e3d411c.png\";","import React from \"react\";\n\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nexport default function NavBar() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n      <Nav className=\"justify-content-center\" style={{ width: \"100%\" }}>\n        <Nav.Link href=\"#about\">About</Nav.Link>\n        <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n        <Nav.Link href=\"#contact\">Book Your Workout</Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n}\n","import React from \"react\";\nimport { Form, Col, Row } from \"react-bootstrap\";\nimport \"./Style.css\";\nexport function Footer() {\n  return (\n    <React.Fragment>\n      <div id=\"footerContainer\">\n        <Form id=\"formContainer\">\n          <Form.Group as={Row}>\n            <Col sm=\"12\" id=\"footerFormMessageContainer\">\n              <p>Questions ? contact me at demarcuskennedy@gmail.com</p>\n            </Col>\n            <Col sm=\"12\" id=\"iconRow\">\n              <i className=\"footerIcon footerIconBg fab fa-instagram\"></i>\n              <i className=\"footerIcon fab fa-youtube\"></i>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n      {/* <Navbar bg=\"dark\" variant=\"dark\" sticky=\"bottom\">\n        <Nav className=\"ml-auto\">\n          <Nav.Link href=\"#about\">About</Nav.Link>\n          <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n          <Nav.Link href=\"#contact\">Contact</Nav.Link>\n        </Nav>\n      </Navbar> */}\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { Form } from \"react-bootstrap\";\n\nexport default function SchedulingForm() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setlastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [sessionType, setSessionType] = useState(null);\n  const [isGroup, setIsGroup] = useState(null);\n  const [groupCount, setGroupCount] = useState(2);\n  const [weekly, setIsWeekly] = useState(null);\n  const [sessionPerWeek, setSessionPerWeek] = useState(2);\n\n  return (\n    <div id=\"schedulingFormContainer\" className=\"row\">\n      <div className=\"formSection\">\n        <div className=\"col-md-12 formSectionTitleContainer\">\n          <p className=\"formSectionTitle\">Contact Infomation</p>\n        </div>\n        <div className=\"fields row\">\n          <div className=\"col-md-6\">\n            <Form.Group\n              controlId=\"formFirstName\"\n              className=\"formFieldGroupCenter\"\n            >\n              <Form.Label>First Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={firstName}\n                onChange={(e) => {\n                  setFirstName(e.target.value);\n                }}\n              />\n            </Form.Group>\n          </div>\n          <div className=\"col-md-6\">\n            <Form.Group\n              controlId=\"formLastName\"\n              className=\"formFieldGroupCenter\"\n            >\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={lastName}\n                onChange={(e) => {\n                  setlastName(e.target.value);\n                }}\n              />\n            </Form.Group>\n          </div>\n          <div className=\"col-md-6\">\n            <Form.Group controlId=\"formEmail\" className=\"formFieldGroupCenter\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n            </Form.Group>\n          </div>\n          <div className=\"col-md-6\"></div>\n        </div>\n      </div>\n\n      <div className=\"formSection\">\n        <div className=\"col-md-12 formSectionTitleContainer\">\n          <p className=\"formSectionTitle\">Personalize your personal training</p>\n          <p className=\"formSectionSubTitle\">\n            Fill out these questions to schedule your custom session.\n          </p>\n        </div>\n        <div className=\"col-md-12\">\n          <Form.Group\n            controlId=\"formFirstName\"\n            className=\"formFieldGroupCenter\"\n          >\n            <Form.Label>In person or virtual online training</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={sessionType}\n              onChange={(e) => {\n                setSessionType(e.target.value);\n              }}\n            >\n              <option value={null} selected disabled>\n                Select....\n              </option>\n              <option value={\"In Persion\"}>In Person</option>\n              <option value={\"Online\"}>Online</option>\n            </Form.Control>\n          </Form.Group>\n        </div>\n        {sessionType ? (\n          <SessionTypeSwitch\n            sessionType={sessionType}\n            setIsGroup={setIsGroup}\n            isGroup={isGroup}\n          />\n        ) : (\n          <></>\n        )}\n        {isGroup !== null ? (\n          <IndividualGroupSwitch\n            isGroup={isGroup}\n            groupCount={groupCount}\n            setGroupCount={setGroupCount}\n            setIsWeekly={setIsWeekly}\n            weekly={weekly}\n          />\n        ) : (\n          <></>\n        )}\n        {weekly === \"weekly\" ? (\n          <SessionsPerWeek\n            sessionPerWeek={sessionPerWeek}\n            setSessionPerWeek={setSessionPerWeek}\n          />\n        ) : (\n          <></>\n        )}\n      </div>\n    </div>\n  );\n}\nfunction SessionTypeSwitch({ sessionType, isGroup, setIsGroup }) {\n  return sessionType === \"In Persion\" ? (\n    <div className=\"col-md-12\">\n      <Form.Group controlId=\"formFirstName\" className=\"formFieldGroupCenter\">\n        <Form.Label>Will your sessions be one on one or in a group?</Form.Label>\n        <Form.Control\n          as=\"select\"\n          value={isGroup}\n          onChange={(e) => {\n            setIsGroup(e.target.value);\n          }}\n        >\n          <option value={null} selected disabled>\n            Select....\n          </option>\n          <option value={\"Individual\"}>Individual</option>\n          <option value={\"Group\"}>Group</option>\n        </Form.Control>\n      </Form.Group>\n    </div>\n  ) : (\n    <div>online isnt even a written yet</div>\n  );\n}\n\nfunction IndividualGroupSwitch({\n  isGroup,\n  groupCount,\n  setGroupCount,\n  weekly,\n  setIsWeekly,\n}) {\n  return isGroup === \"Group\" ? (\n    <>\n      <div className=\"col-md-12\" key={isGroup}>\n        <Form.Group controlId=\"formGroupCount\" className=\"formFieldGroupCenter\">\n          <Form.Label>How many people will be in your group?</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={groupCount}\n            onChange={(e) => {\n              setGroupCount(e.target.value);\n            }}\n          />\n        </Form.Group>\n      </div>\n      <WeeklySessionSwitch setIsWeekly={setIsWeekly} weekly={weekly} />\n    </>\n  ) : (\n    <WeeklySessionSwitch setIsWeekly={setIsWeekly} weekly={weekly} />\n  );\n\n  // alert(isGroup);\n  // return (\n  //   <div className=\"col-md-6\" key={isGroup}>\n  //     {isGroup ? (\n  //       <Form.Group controlId=\"formGroupCount\" className=\"formFieldGroupCenter\">\n  //         <Form.Label>How many people will be in your group?</Form.Label>\n  //         <Form.Control\n  //           type=\"text\"\n  //           value={groupCount}\n  //           onChange={(e) => {\n  //             setGroupCount(e.target.value);\n  //           }}\n  //         />\n  //       </Form.Group>\n  //     ) : (\n  //       <React.Fragment>not in group</React.Fragment>\n  //     )}\n  //   </div>\n  // );\n}\n\nfunction WeeklySessionSwitch({ setIsWeekly, weekly }) {\n  return (\n    <div className=\"col-md-12\">\n      <Form.Group controlId=\"formWeekly\" className=\"formFieldGroupCenter\">\n        <Form.Label>Recurring weekly session(s) or pay by session?</Form.Label>\n        <Form.Control\n          as=\"select\"\n          value={weekly}\n          onChange={(e) => {\n            setIsWeekly(e.target.value);\n          }}\n        >\n          <option value={null} selected disabled>\n            Select....\n          </option>\n          <option value={\"weekly\"}>Weekly</option>\n          <option value={\"notWeekly\"}>Pay by session</option>\n        </Form.Control>\n      </Form.Group>\n    </div>\n  );\n}\n\nfunction SessionsPerWeek({ sessionPerWeek, setSessionPerWeek }) {\n  return (\n    <div className=\"col-md-12\">\n      <Form.Group\n        controlId=\"formSessionPerWeek\"\n        className=\"formFieldGroupCenter\"\n      >\n        <Form.Label>How many sessions per week?</Form.Label>\n        <Form.Control\n          as=\"select\"\n          value={sessionPerWeek}\n          onChange={(e) => {\n            setSessionPerWeek(e.target.value);\n          }}\n        >\n          <option value={null} selected disabled>\n            Select....\n          </option>\n          <option value={1}>1</option>\n          <option value={2}>2</option>\n          <option value={3}>3</option>\n          <option value={4}>4</option>\n          <option value={5}>5</option>\n        </Form.Control>\n      </Form.Group>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./Style.css\";\n\nimport SchedulingForm from \"./SchedulingForm\";\n\nclass Scheduling extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"container-fluid flex-fill\" id=\"mainContainer\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <p className=\"pageTitle\">Schedule your person training</p>\n          </div>\n          <div className=\"col-md-8\">\n            <p className=\"pageMessage\">\n              Fill out the form to schedule your personal training. I will\n              respond via email ASAP.\n            </p>\n          </div>\n        </div>\n        <div className=\"container\">\n          <SchedulingForm />\n        </div>\n\n        {/* <div>\n            <div className=\"col-md-6\">\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>First Name</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n            </div>\n          </div> */}\n      </div>\n    );\n  }\n}\n\nexport default Scheduling;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//comps\nimport NavBar from \"./Components/Nav/NavBar\";\nimport { Footer } from \"./Components/Footer/Footer\";\n\n//pages\nimport About from \"./Pages/About/About\";\nimport Pricing from \"./Pages/Pricing/Pricing\";\nimport Scheduling from \"./Pages/Scheduling/Scheduling\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      {/* <About /> */}\n      {/* <Pricing /> */}\n      <Scheduling />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}